//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-model/actor-ios/build/java/im/actor/model/entity/Peer.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "im/actor/model/entity/Peer.h"
#include "im/actor/model/entity/PeerType.h"

@interface ImActorModelEntityPeer () {
 @public
  ImActorModelEntityPeerTypeEnum *peerType_;
  jint peerId_;
}
@end

J2OBJC_FIELD_SETTER(ImActorModelEntityPeer, peerType_, ImActorModelEntityPeerTypeEnum *)

@implementation ImActorModelEntityPeer

- (instancetype)initWithImActorModelEntityPeerTypeEnum:(ImActorModelEntityPeerTypeEnum *)peerType
                                               withInt:(jint)peerId {
  if (self = [super init]) {
    ImActorModelEntityPeer_set_peerType_(self, peerType);
    self->peerId_ = peerId;
  }
  return self;
}

- (jlong)getUid {
  jint type;
  switch ([peerType_ ordinal]) {
    default:
    case ImActorModelEntityPeerType_PRIVATE:
    type = 0;
    break;
    case ImActorModelEntityPeerType_GROUP:
    type = 1;
    break;
    case ImActorModelEntityPeerType_EMAIL:
    type = 2;
    break;
  }
  return peerId_ + (LShift64((jlong) type, 32));
}

- (ImActorModelEntityPeerTypeEnum *)getPeerType {
  return peerType_;
}

- (jint)getPeerId {
  return peerId_;
}

- (jboolean)isEqual:(id)o {
  if (self == o) return YES;
  if (o == nil || [self getClass] != [o getClass]) return NO;
  ImActorModelEntityPeer *peer = (ImActorModelEntityPeer *) check_class_cast(o, [ImActorModelEntityPeer class]);
  if (peerId_ != ((ImActorModelEntityPeer *) nil_chk(peer))->peerId_) return NO;
  if (peerType_ != peer->peerType_) return NO;
  return YES;
}

- (NSUInteger)hash {
  jint result = ((jint) [((ImActorModelEntityPeerTypeEnum *) nil_chk(peerType_)) hash]);
  result = 31 * result + peerId_;
  return result;
}

- (void)dealloc {
  RELEASE_(peerType_);
  [super dealloc];
}

- (void)copyAllFieldsTo:(ImActorModelEntityPeer *)other {
  [super copyAllFieldsTo:other];
  ImActorModelEntityPeer_set_peerType_(other, peerType_);
  other->peerId_ = peerId_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithImActorModelEntityPeerTypeEnum:withInt:", "Peer", NULL, 0x1, NULL },
    { "getUid", NULL, "J", 0x1, NULL },
    { "getPeerType", NULL, "Lim.actor.model.entity.PeerType;", 0x1, NULL },
    { "getPeerId", NULL, "I", 0x1, NULL },
    { "isEqual:", "equals", "Z", 0x1, NULL },
    { "hash", "hashCode", "I", 0x1, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "peerType_", NULL, 0x12, "Lim.actor.model.entity.PeerType;", NULL,  },
    { "peerId_", NULL, 0x12, "I", NULL,  },
  };
  static const J2ObjcClassInfo _ImActorModelEntityPeer = { 1, "Peer", "im.actor.model.entity", NULL, 0x1, 6, methods, 2, fields, 0, NULL};
  return &_ImActorModelEntityPeer;
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorModelEntityPeer)
