//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-model/actor-ios/build/java/im/actor/model/api/updates/UpdateTyping.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "im/actor/model/api/Peer.h"
#include "im/actor/model/api/updates/UpdateTyping.h"
#include "im/actor/model/droidkit/bser/Bser.h"
#include "im/actor/model/droidkit/bser/BserObject.h"
#include "im/actor/model/droidkit/bser/BserValues.h"
#include "im/actor/model/droidkit/bser/BserWriter.h"
#include "java/io/IOException.h"

@interface ImActorModelApiUpdatesUpdateTyping () {
 @public
  ImActorModelApiPeer *peer_;
  jint uid_;
  jint typingType_;
}
@end

J2OBJC_FIELD_SETTER(ImActorModelApiUpdatesUpdateTyping, peer_, ImActorModelApiPeer *)

@implementation ImActorModelApiUpdatesUpdateTyping

+ (ImActorModelApiUpdatesUpdateTyping *)fromBytesWithByteArray:(IOSByteArray *)data {
  return ImActorModelApiUpdatesUpdateTyping_fromBytesWithByteArray_(data);
}

- (instancetype)initWithImActorModelApiPeer:(ImActorModelApiPeer *)peer
                                    withInt:(jint)uid
                                    withInt:(jint)typingType {
  if (self = [super init]) {
    self->peer_ = peer;
    self->uid_ = uid;
    self->typingType_ = typingType;
  }
  return self;
}

- (instancetype)init {
  return [super init];
}

- (ImActorModelApiPeer *)getPeer {
  return self->peer_;
}

- (jint)getUid {
  return self->uid_;
}

- (jint)getTypingType {
  return self->typingType_;
}

- (void)parseWithBSBserValues:(BSBserValues *)values {
  self->peer_ = [((BSBserValues *) nil_chk(values)) getObjWithInt:1 withBSBserObject:[[ImActorModelApiPeer alloc] init]];
  self->uid_ = [values getIntWithInt:2];
  self->typingType_ = [values getIntWithInt:3];
}

- (void)serializeWithBSBserWriter:(BSBserWriter *)writer {
  if (self->peer_ == nil) {
    @throw [[JavaIoIOException alloc] init];
  }
  [((BSBserWriter *) nil_chk(writer)) writeObjectWithInt:1 withBSBserObject:self->peer_];
  [writer writeIntWithInt:2 withInt:self->uid_];
  [writer writeIntWithInt:3 withInt:self->typingType_];
}

- (jint)getHeaderKey {
  return ImActorModelApiUpdatesUpdateTyping_HEADER;
}

- (void)copyAllFieldsTo:(ImActorModelApiUpdatesUpdateTyping *)other {
  [super copyAllFieldsTo:other];
  other->peer_ = peer_;
  other->uid_ = uid_;
  other->typingType_ = typingType_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "fromBytesWithByteArray:", "fromBytes", "Lim.actor.model.api.updates.UpdateTyping;", 0x9, "Ljava.io.IOException;" },
    { "initWithImActorModelApiPeer:withInt:withInt:", "UpdateTyping", NULL, 0x1, NULL },
    { "init", "UpdateTyping", NULL, 0x1, NULL },
    { "getPeer", NULL, "Lim.actor.model.api.Peer;", 0x1, NULL },
    { "getUid", NULL, "I", 0x1, NULL },
    { "getTypingType", NULL, "I", 0x1, NULL },
    { "parseWithBSBserValues:", "parse", "V", 0x1, "Ljava.io.IOException;" },
    { "serializeWithBSBserWriter:", "serialize", "V", 0x1, "Ljava.io.IOException;" },
    { "getHeaderKey", NULL, "I", 0x1, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "HEADER_", NULL, 0x19, "I", NULL, .constantValue.asInt = ImActorModelApiUpdatesUpdateTyping_HEADER },
    { "peer_", NULL, 0x2, "Lim.actor.model.api.Peer;", NULL,  },
    { "uid_", NULL, 0x2, "I", NULL,  },
    { "typingType_", NULL, 0x2, "I", NULL,  },
  };
  static const J2ObjcClassInfo _ImActorModelApiUpdatesUpdateTyping = { 1, "UpdateTyping", "im.actor.model.api.updates", NULL, 0x1, 9, methods, 4, fields, 0, NULL};
  return &_ImActorModelApiUpdatesUpdateTyping;
}

@end

ImActorModelApiUpdatesUpdateTyping *ImActorModelApiUpdatesUpdateTyping_fromBytesWithByteArray_(IOSByteArray *data) {
  ImActorModelApiUpdatesUpdateTyping_init();
  return ((ImActorModelApiUpdatesUpdateTyping *) BSBser_parseWithBSBserObject_withByteArray_([[ImActorModelApiUpdatesUpdateTyping alloc] init], data));
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorModelApiUpdatesUpdateTyping)
