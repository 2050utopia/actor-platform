//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-model/actor-ios/build/java/im/actor/model/api/Config.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "im/actor/model/api/Config.h"
#include "im/actor/model/droidkit/bser/BserValues.h"
#include "im/actor/model/droidkit/bser/BserWriter.h"
#include "java/io/IOException.h"

@interface ImActorModelApiConfig () {
 @public
  jint maxGroupSize_;
}
@end

@implementation ImActorModelApiConfig

- (instancetype)initWithInt:(jint)maxGroupSize {
  if (self = [super init]) {
    self->maxGroupSize_ = maxGroupSize;
  }
  return self;
}

- (instancetype)init {
  return [super init];
}

- (jint)getMaxGroupSize {
  return self->maxGroupSize_;
}

- (void)parseWithImActorModelDroidkitBserBserValues:(ImActorModelDroidkitBserBserValues *)values {
  self->maxGroupSize_ = [((ImActorModelDroidkitBserBserValues *) nil_chk(values)) getIntWithInt:1];
}

- (void)serializeWithImActorModelDroidkitBserBserWriter:(ImActorModelDroidkitBserBserWriter *)writer {
  [((ImActorModelDroidkitBserBserWriter *) nil_chk(writer)) writeIntWithInt:1 withInt:self->maxGroupSize_];
}

- (void)copyAllFieldsTo:(ImActorModelApiConfig *)other {
  [super copyAllFieldsTo:other];
  other->maxGroupSize_ = maxGroupSize_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithInt:", "Config", NULL, 0x1, NULL },
    { "init", "Config", NULL, 0x1, NULL },
    { "getMaxGroupSize", NULL, "I", 0x1, NULL },
    { "parseWithImActorModelDroidkitBserBserValues:", "parse", "V", 0x1, "Ljava.io.IOException;" },
    { "serializeWithImActorModelDroidkitBserBserWriter:", "serialize", "V", 0x1, "Ljava.io.IOException;" },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "maxGroupSize_", NULL, 0x2, "I", NULL,  },
  };
  static const J2ObjcClassInfo _ImActorModelApiConfig = { 1, "Config", "im.actor.model.api", NULL, 0x1, 5, methods, 1, fields, 0, NULL};
  return &_ImActorModelApiConfig;
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorModelApiConfig)
