//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-model/actor-ios/build/java/im/actor/model/network/mtp/entity/ProtoPackage.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "im/actor/model/network/mtp/entity/ProtoMessage.h"
#include "im/actor/model/network/mtp/entity/ProtoObject.h"
#include "im/actor/model/network/mtp/entity/ProtoPackage.h"
#include "im/actor/model/util/StreamingUtils.h"
#include "java/io/IOException.h"
#include "java/io/InputStream.h"
#include "java/io/OutputStream.h"

@interface MTProtoPackage () {
 @public
  jlong authId_;
  jlong sessionId_;
  MTProtoMessage *payload_;
}
@end

J2OBJC_FIELD_SETTER(MTProtoPackage, payload_, MTProtoMessage *)

@implementation MTProtoPackage

- (instancetype)initWithJavaIoInputStream:(JavaIoInputStream *)stream {
  return [super initWithJavaIoInputStream:stream];
}

- (instancetype)initWithLong:(jlong)authId
                    withLong:(jlong)sessionId
          withMTProtoMessage:(MTProtoMessage *)payload {
  if (self = [super init]) {
    self->authId_ = authId;
    self->sessionId_ = sessionId;
    MTProtoPackage_set_payload_(self, payload);
  }
  return self;
}

- (jlong)getAuthId {
  return authId_;
}

- (jlong)getSessionId {
  return sessionId_;
}

- (MTProtoMessage *)getPayload {
  return payload_;
}

- (void)writeObjectWithJavaIoOutputStream:(JavaIoOutputStream *)bs {
  AMStreamingUtils_writeLongWithLong_withJavaIoOutputStream_(authId_, bs);
  AMStreamingUtils_writeLongWithLong_withJavaIoOutputStream_(sessionId_, bs);
  [((MTProtoMessage *) nil_chk(payload_)) writeObjectWithJavaIoOutputStream:bs];
}

- (MTProtoObject *)readObjectWithJavaIoInputStream:(JavaIoInputStream *)bs {
  authId_ = AMStreamingUtils_readLongWithJavaIoInputStream_(bs);
  sessionId_ = AMStreamingUtils_readLongWithJavaIoInputStream_(bs);
  MTProtoPackage_setAndConsume_payload_(self, [[MTProtoMessage alloc] initWithJavaIoInputStream:bs]);
  return self;
}

- (jint)getLength {
  return 8 + 8 + [((MTProtoMessage *) nil_chk(payload_)) getLength];
}

- (NSString *)description {
  return JreStrcat("$JCJC", @"ProtoPackage[", authId_, '|', sessionId_, ']');
}

- (void)dealloc {
  RELEASE_(payload_);
  [super dealloc];
}

- (void)copyAllFieldsTo:(MTProtoPackage *)other {
  [super copyAllFieldsTo:other];
  other->authId_ = authId_;
  other->sessionId_ = sessionId_;
  MTProtoPackage_set_payload_(other, payload_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithJavaIoInputStream:", "ProtoPackage", NULL, 0x1, "Ljava.io.IOException;" },
    { "initWithLong:withLong:withMTProtoMessage:", "ProtoPackage", NULL, 0x1, NULL },
    { "getAuthId", NULL, "J", 0x1, NULL },
    { "getSessionId", NULL, "J", 0x1, NULL },
    { "getPayload", NULL, "Lim.actor.model.network.mtp.entity.ProtoMessage;", 0x1, NULL },
    { "writeObjectWithJavaIoOutputStream:", "writeObject", "V", 0x1, "Ljava.io.IOException;" },
    { "readObjectWithJavaIoInputStream:", "readObject", "Lim.actor.model.network.mtp.entity.ProtoObject;", 0x1, "Ljava.io.IOException;" },
    { "getLength", NULL, "I", 0x1, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "authId_", NULL, 0x2, "J", NULL,  },
    { "sessionId_", NULL, 0x2, "J", NULL,  },
    { "payload_", NULL, 0x2, "Lim.actor.model.network.mtp.entity.ProtoMessage;", NULL,  },
  };
  static const J2ObjcClassInfo _MTProtoPackage = { 1, "ProtoPackage", "im.actor.model.network.mtp.entity", NULL, 0x1, 9, methods, 3, fields, 0, NULL};
  return &_MTProtoPackage;
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(MTProtoPackage)
