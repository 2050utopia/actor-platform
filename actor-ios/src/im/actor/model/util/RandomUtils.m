//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-model/actor-ios/build/java/im/actor/model/util/RandomUtils.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "im/actor/model/util/RandomUtils.h"
#include "java/util/Random.h"

@interface AMRandomUtils () {
}
@end

BOOL AMRandomUtils_initialized = NO;

@implementation AMRandomUtils

JavaUtilRandom * AMRandomUtils_random_;

+ (IOSByteArray *)seedWithInt:(jint)size {
  return AMRandomUtils_seedWithInt_(size);
}

- (instancetype)init {
  return [super init];
}

+ (void)initialize {
  if (self == [AMRandomUtils class]) {
    JreStrongAssignAndConsume(&AMRandomUtils_random_, nil, [[JavaUtilRandom alloc] init]);
    J2OBJC_SET_INITIALIZED(AMRandomUtils)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "seedWithInt:", "seed", "[B", 0x29, NULL },
    { "init", NULL, NULL, 0x1, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "random_", NULL, 0xa, "Ljava.util.Random;", &AMRandomUtils_random_,  },
  };
  static const J2ObjcClassInfo _AMRandomUtils = { 1, "RandomUtils", "im.actor.model.util", NULL, 0x1, 2, methods, 1, fields, 0, NULL};
  return &_AMRandomUtils;
}

@end

IOSByteArray *AMRandomUtils_seedWithInt_(jint size) {
  AMRandomUtils_init();
  @synchronized(AMRandomUtils_class_()) {
    IOSByteArray *res = [IOSByteArray arrayWithLength:size];
    [((JavaUtilRandom *) nil_chk(AMRandomUtils_random_)) nextBytesWithByteArray:res];
    return res;
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AMRandomUtils)
