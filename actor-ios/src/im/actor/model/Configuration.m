//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-model/actor-ios/build/java/im/actor/model/Configuration.java
//

#include "J2ObjC_source.h"
#include "im/actor/model/Configuration.h"
#include "im/actor/model/concurrency/MainThread.h"
#include "im/actor/model/concurrency/NoMainThread.h"
#include "im/actor/model/network/Endpoints.h"
#include "im/actor/model/storage/EnginesFactory.h"
#include "im/actor/model/storage/MemoryEnginesFactory.h"
#include "im/actor/model/storage/MemoryPreferences.h"
#include "im/actor/model/storage/PreferencesStorage.h"

@interface AMConfiguration () {
 @public
  id<ImActorModelConcurrencyMainThread> mainThread_;
  AMEndpoints *endpoints_;
  id<ImActorModelStoragePreferencesStorage> preferencesStorage_;
  id<ImActorModelStorageEnginesFactory> enginesFactory_;
}
@end

J2OBJC_FIELD_SETTER(AMConfiguration, mainThread_, id<ImActorModelConcurrencyMainThread>)
J2OBJC_FIELD_SETTER(AMConfiguration, endpoints_, AMEndpoints *)
J2OBJC_FIELD_SETTER(AMConfiguration, preferencesStorage_, id<ImActorModelStoragePreferencesStorage>)
J2OBJC_FIELD_SETTER(AMConfiguration, enginesFactory_, id<ImActorModelStorageEnginesFactory>)

@implementation AMConfiguration

- (id<ImActorModelStorageEnginesFactory>)getEnginesFactory {
  return enginesFactory_;
}

- (void)setEnginesFactoryWithImActorModelStorageEnginesFactory:(id<ImActorModelStorageEnginesFactory>)enginesFactory {
  AMConfiguration_set_enginesFactory_(self, enginesFactory);
}

- (id<ImActorModelStoragePreferencesStorage>)getPreferencesStorage {
  return preferencesStorage_;
}

- (void)setPreferencesStorageWithImActorModelStoragePreferencesStorage:(id<ImActorModelStoragePreferencesStorage>)preferencesStorage {
  AMConfiguration_set_preferencesStorage_(self, preferencesStorage);
}

- (AMEndpoints *)getEndpoints {
  return endpoints_;
}

- (void)setEndpointsWithAMEndpoints:(AMEndpoints *)endpoints {
  AMConfiguration_set_endpoints_(self, endpoints);
}

- (id<ImActorModelConcurrencyMainThread>)getMainThread {
  return mainThread_;
}

- (void)setMainThreadWithImActorModelConcurrencyMainThread:(id<ImActorModelConcurrencyMainThread>)mainThread {
  AMConfiguration_set_mainThread_(self, mainThread);
}

- (instancetype)init {
  if (self = [super init]) {
    AMConfiguration_setAndConsume_mainThread_(self, [[ImActorModelConcurrencyNoMainThread alloc] init]);
    AMConfiguration_setAndConsume_preferencesStorage_(self, [[ImActorModelStorageMemoryPreferences alloc] init]);
    AMConfiguration_setAndConsume_enginesFactory_(self, [[ImActorModelStorageMemoryEnginesFactory alloc] init]);
  }
  return self;
}

- (void)dealloc {
  RELEASE_(mainThread_);
  RELEASE_(endpoints_);
  RELEASE_(preferencesStorage_);
  RELEASE_(enginesFactory_);
  [super dealloc];
}

- (void)copyAllFieldsTo:(AMConfiguration *)other {
  [super copyAllFieldsTo:other];
  AMConfiguration_set_mainThread_(other, mainThread_);
  AMConfiguration_set_endpoints_(other, endpoints_);
  AMConfiguration_set_preferencesStorage_(other, preferencesStorage_);
  AMConfiguration_set_enginesFactory_(other, enginesFactory_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getEnginesFactory", NULL, "Lim.actor.model.storage.EnginesFactory;", 0x1, NULL },
    { "setEnginesFactoryWithImActorModelStorageEnginesFactory:", "setEnginesFactory", "V", 0x1, NULL },
    { "getPreferencesStorage", NULL, "Lim.actor.model.storage.PreferencesStorage;", 0x1, NULL },
    { "setPreferencesStorageWithImActorModelStoragePreferencesStorage:", "setPreferencesStorage", "V", 0x1, NULL },
    { "getEndpoints", NULL, "Lim.actor.model.network.Endpoints;", 0x1, NULL },
    { "setEndpointsWithAMEndpoints:", "setEndpoints", "V", 0x1, NULL },
    { "getMainThread", NULL, "Lim.actor.model.concurrency.MainThread;", 0x1, NULL },
    { "setMainThreadWithImActorModelConcurrencyMainThread:", "setMainThread", "V", 0x1, NULL },
    { "init", NULL, NULL, 0x1, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "mainThread_", NULL, 0x2, "Lim.actor.model.concurrency.MainThread;", NULL,  },
    { "endpoints_", NULL, 0x2, "Lim.actor.model.network.Endpoints;", NULL,  },
    { "preferencesStorage_", NULL, 0x2, "Lim.actor.model.storage.PreferencesStorage;", NULL,  },
    { "enginesFactory_", NULL, 0x2, "Lim.actor.model.storage.EnginesFactory;", NULL,  },
  };
  static const J2ObjcClassInfo _AMConfiguration = { 1, "Configuration", "im.actor.model", NULL, 0x1, 9, methods, 4, fields, 0, NULL};
  return &_AMConfiguration;
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AMConfiguration)
