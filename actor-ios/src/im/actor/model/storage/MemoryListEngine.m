//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-model/actor-ios/build/java/im/actor/model/storage/MemoryListEngine.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "im/actor/model/mvvm/ListEngineItem.h"
#include "im/actor/model/storage/MemoryListEngine.h"
#include "java/lang/Long.h"
#include "java/util/ArrayList.h"
#include "java/util/Collection.h"
#include "java/util/Collections.h"
#include "java/util/HashMap.h"
#include "java/util/List.h"

__attribute__((unused)) static void AMMemoryListEngine_updateSort(AMMemoryListEngine *self);

@interface AMMemoryListEngine () {
 @public
  JavaUtilHashMap *items_;
  JavaUtilArrayList *sortList_;
  JavaUtilArrayList *listeners_;
}

- (void)updateSort;
@end

J2OBJC_FIELD_SETTER(AMMemoryListEngine, items_, JavaUtilHashMap *)
J2OBJC_FIELD_SETTER(AMMemoryListEngine, sortList_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(AMMemoryListEngine, listeners_, JavaUtilArrayList *)

@implementation AMMemoryListEngine

- (instancetype)init {
  if (self = [super init]) {
    items_ = [[JavaUtilHashMap alloc] init];
    sortList_ = [[JavaUtilArrayList alloc] init];
    listeners_ = [[JavaUtilArrayList alloc] init];
  }
  return self;
}

- (void)addListenerWithAMMemoryListEngine_EngineListener:(id<AMMemoryListEngine_EngineListener>)l {
  [((JavaUtilArrayList *) nil_chk(listeners_)) addWithId:l];
}

- (void)removeListenerWithAMMemoryListEngine_EngineListener:(id<AMMemoryListEngine_EngineListener>)l {
  [((JavaUtilArrayList *) nil_chk(listeners_)) removeWithId:l];
}

- (void)updateSort {
  AMMemoryListEngine_updateSort(self);
}

- (JavaUtilArrayList *)getList {
  return (JavaUtilArrayList *) check_class_cast([((JavaUtilArrayList *) nil_chk(sortList_)) clone], [JavaUtilArrayList class]);
}

- (void)addOrUpdateItemWithAMListEngineItem:(id<AMListEngineItem>)item {
  (void) [((JavaUtilHashMap *) nil_chk(items_)) putWithId:JavaLangLong_valueOfWithLong_([((id<AMListEngineItem>) nil_chk(item)) getListId]) withId:item];
  AMMemoryListEngine_updateSort(self);
}

- (void)addOrUpdateItemsWithJavaUtilList:(id<JavaUtilList>)values {
  for (id<AMListEngineItem> __strong v in nil_chk(values)) {
    [self addOrUpdateItemWithAMListEngineItem:v];
  }
}

- (void)replaceItemsWithJavaUtilList:(id<JavaUtilList>)values {
  [((JavaUtilHashMap *) nil_chk(items_)) clear];
  [self addOrUpdateItemsWithJavaUtilList:values];
}

- (void)removeItemWithLong:(jlong)id_ {
  (void) [((JavaUtilHashMap *) nil_chk(items_)) removeWithId:JavaLangLong_valueOfWithLong_(id_)];
  AMMemoryListEngine_updateSort(self);
}

- (void)removeItemsWithLongArray:(IOSLongArray *)ids {
  {
    IOSLongArray *a__ = ids;
    jlong const *b__ = ((IOSLongArray *) nil_chk(a__))->buffer_;
    jlong const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      jlong l = *b__++;
      (void) [((JavaUtilHashMap *) nil_chk(items_)) removeWithId:JavaLangLong_valueOfWithLong_(l)];
    }
  }
  AMMemoryListEngine_updateSort(self);
}

- (void)clear {
  [((JavaUtilHashMap *) nil_chk(items_)) clear];
  AMMemoryListEngine_updateSort(self);
}

- (id)getValueWithLong:(jlong)id_ {
  return [((JavaUtilHashMap *) nil_chk(items_)) getWithId:JavaLangLong_valueOfWithLong_(id_)];
}

- (id)getHeadValue {
  return nil;
}

- (jint)getCount {
  return [((JavaUtilHashMap *) nil_chk(items_)) size];
}

- (void)copyAllFieldsTo:(AMMemoryListEngine *)other {
  [super copyAllFieldsTo:other];
  other->items_ = items_;
  other->sortList_ = sortList_;
  other->listeners_ = listeners_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "MemoryListEngine", NULL, 0x1, NULL },
    { "addListenerWithAMMemoryListEngine_EngineListener:", "addListener", "V", 0x1, NULL },
    { "removeListenerWithAMMemoryListEngine_EngineListener:", "removeListener", "V", 0x1, NULL },
    { "updateSort", NULL, "V", 0x2, NULL },
    { "getList", NULL, "Ljava.util.ArrayList;", 0x1, NULL },
    { "addOrUpdateItemWithAMListEngineItem:", "addOrUpdateItem", "V", 0x1, NULL },
    { "addOrUpdateItemsWithJavaUtilList:", "addOrUpdateItems", "V", 0x1, NULL },
    { "replaceItemsWithJavaUtilList:", "replaceItems", "V", 0x1, NULL },
    { "removeItemWithLong:", "removeItem", "V", 0x1, NULL },
    { "removeItemsWithLongArray:", "removeItems", "V", 0x1, NULL },
    { "clear", NULL, "V", 0x1, NULL },
    { "getValueWithLong:", "getValue", "TV;", 0x1, NULL },
    { "getHeadValue", NULL, "TV;", 0x1, NULL },
    { "getCount", NULL, "I", 0x1, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "items_", NULL, 0x2, "Ljava.util.HashMap;", NULL,  },
    { "sortList_", NULL, 0x2, "Ljava.util.ArrayList;", NULL,  },
    { "listeners_", NULL, 0x2, "Ljava.util.ArrayList;", NULL,  },
  };
  static const J2ObjcClassInfo _AMMemoryListEngine = { 1, "MemoryListEngine", "im.actor.model.storage", NULL, 0x1, 14, methods, 3, fields, 0, NULL};
  return &_AMMemoryListEngine;
}

@end

void AMMemoryListEngine_updateSort(AMMemoryListEngine *self) {
  [((JavaUtilArrayList *) nil_chk(self->sortList_)) clear];
  [self->sortList_ addAllWithJavaUtilCollection:[((JavaUtilHashMap *) nil_chk(self->items_)) values]];
  JavaUtilCollections_sortWithJavaUtilList_withJavaUtilComparator_(self->sortList_, [[AMMemoryListEngine_$1 alloc] init]);
  for (id<AMMemoryListEngine_EngineListener> __strong l in nil_chk(self->listeners_)) {
    [((id<AMMemoryListEngine_EngineListener>) nil_chk(l)) onItemsChanged];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AMMemoryListEngine)

@interface AMMemoryListEngine_EngineListener : NSObject
@end

@implementation AMMemoryListEngine_EngineListener

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "onItemsChanged", NULL, "V", 0x401, NULL },
  };
  static const J2ObjcClassInfo _AMMemoryListEngine_EngineListener = { 1, "EngineListener", "im.actor.model.storage", "MemoryListEngine", 0x201, 1, methods, 0, NULL, 0, NULL};
  return &_AMMemoryListEngine_EngineListener;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(AMMemoryListEngine_EngineListener)

@implementation AMMemoryListEngine_$1

- (jint)compareWithId:(id<AMListEngineItem>)o1
               withId:(id<AMListEngineItem>)o2 {
  return [self compareWithLong:[((id<AMListEngineItem>) nil_chk(o2)) getListSortKey] withLong:[((id<AMListEngineItem>) nil_chk(o1)) getListSortKey]];
}

- (jint)compareWithLong:(jlong)x
               withLong:(jlong)y {
  return (x < y) ? -1 : ((x == y) ? 0 : 1);
}

- (instancetype)init {
  return [super init];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "compareWithAMListEngineItem:withAMListEngineItem:", "compare", "I", 0x1, NULL },
    { "compareWithLong:withLong:", "compare", "I", 0x1, NULL },
    { "init", NULL, NULL, 0x0, NULL },
  };
  static const J2ObjcClassInfo _AMMemoryListEngine_$1 = { 1, "$1", "im.actor.model.storage", "MemoryListEngine", 0x8000, 3, methods, 0, NULL, 0, NULL};
  return &_AMMemoryListEngine_$1;
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AMMemoryListEngine_$1)
