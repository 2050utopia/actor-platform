//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-model/actor-ios/build/java/im/actor/model/storage/MemoryListEngine.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "im/actor/model/mvvm/ListEngineItem.h"
#include "im/actor/model/storage/MemoryListEngine.h"
#include "java/lang/Long.h"
#include "java/util/ArrayList.h"
#include "java/util/Collection.h"
#include "java/util/Collections.h"
#include "java/util/HashMap.h"
#include "java/util/List.h"

__attribute__((unused)) static void ImActorModelStorageMemoryListEngine_updateSort(ImActorModelStorageMemoryListEngine *self);

@interface ImActorModelStorageMemoryListEngine () {
 @public
  JavaUtilHashMap *items_;
  JavaUtilArrayList *sortList_;
  JavaUtilArrayList *listeners_;
}

- (void)updateSort;
@end

J2OBJC_FIELD_SETTER(ImActorModelStorageMemoryListEngine, items_, JavaUtilHashMap *)
J2OBJC_FIELD_SETTER(ImActorModelStorageMemoryListEngine, sortList_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(ImActorModelStorageMemoryListEngine, listeners_, JavaUtilArrayList *)

@implementation ImActorModelStorageMemoryListEngine

- (instancetype)init {
  if (self = [super init]) {
    ImActorModelStorageMemoryListEngine_setAndConsume_items_(self, [[JavaUtilHashMap alloc] init]);
    ImActorModelStorageMemoryListEngine_setAndConsume_sortList_(self, [[JavaUtilArrayList alloc] init]);
    ImActorModelStorageMemoryListEngine_setAndConsume_listeners_(self, [[JavaUtilArrayList alloc] init]);
  }
  return self;
}

- (void)addListenerWithImActorModelStorageMemoryListEngine_EngineListener:(id<ImActorModelStorageMemoryListEngine_EngineListener>)l {
  [((JavaUtilArrayList *) nil_chk(listeners_)) addWithId:l];
}

- (void)removeListenerWithImActorModelStorageMemoryListEngine_EngineListener:(id<ImActorModelStorageMemoryListEngine_EngineListener>)l {
  [((JavaUtilArrayList *) nil_chk(listeners_)) removeWithId:l];
}

- (void)updateSort {
  ImActorModelStorageMemoryListEngine_updateSort(self);
}

- (JavaUtilArrayList *)getList {
  return (JavaUtilArrayList *) check_class_cast([((JavaUtilArrayList *) nil_chk(sortList_)) clone], [JavaUtilArrayList class]);
}

- (void)addOrUpdateItemWithImActorModelMvvmListEngineItem:(id<ImActorModelMvvmListEngineItem>)item {
  [((JavaUtilHashMap *) nil_chk(items_)) putWithId:JavaLangLong_valueOfWithLong_([((id<ImActorModelMvvmListEngineItem>) nil_chk(item)) getListId]) withId:item];
  ImActorModelStorageMemoryListEngine_updateSort(self);
}

- (void)addOrUpdateItemsWithJavaUtilList:(id<JavaUtilList>)values {
  for (id<ImActorModelMvvmListEngineItem> __strong v in nil_chk(values)) {
    [self addOrUpdateItemWithImActorModelMvvmListEngineItem:v];
  }
}

- (void)replaceItemsWithJavaUtilList:(id<JavaUtilList>)values {
  [((JavaUtilHashMap *) nil_chk(items_)) clear];
  [self addOrUpdateItemsWithJavaUtilList:values];
}

- (void)removeItemWithLong:(jlong)id_ {
  [((JavaUtilHashMap *) nil_chk(items_)) removeWithId:JavaLangLong_valueOfWithLong_(id_)];
  ImActorModelStorageMemoryListEngine_updateSort(self);
}

- (void)removeItemsWithLongArray:(IOSLongArray *)ids {
  {
    IOSLongArray *a__ = ids;
    jlong const *b__ = ((IOSLongArray *) nil_chk(a__))->buffer_;
    jlong const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      jlong l = *b__++;
      [((JavaUtilHashMap *) nil_chk(items_)) removeWithId:JavaLangLong_valueOfWithLong_(l)];
    }
  }
  ImActorModelStorageMemoryListEngine_updateSort(self);
}

- (void)clear {
  [((JavaUtilHashMap *) nil_chk(items_)) clear];
  ImActorModelStorageMemoryListEngine_updateSort(self);
}

- (id)getValueWithLong:(jlong)id_ {
  return [((JavaUtilHashMap *) nil_chk(items_)) getWithId:JavaLangLong_valueOfWithLong_(id_)];
}

- (id)getHeadValue {
  return nil;
}

- (jint)getCount {
  return [((JavaUtilHashMap *) nil_chk(items_)) size];
}

- (void)dealloc {
  RELEASE_(items_);
  RELEASE_(sortList_);
  RELEASE_(listeners_);
  [super dealloc];
}

- (void)copyAllFieldsTo:(ImActorModelStorageMemoryListEngine *)other {
  [super copyAllFieldsTo:other];
  ImActorModelStorageMemoryListEngine_set_items_(other, items_);
  ImActorModelStorageMemoryListEngine_set_sortList_(other, sortList_);
  ImActorModelStorageMemoryListEngine_set_listeners_(other, listeners_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "MemoryListEngine", NULL, 0x1, NULL },
    { "addListenerWithImActorModelStorageMemoryListEngine_EngineListener:", "addListener", "V", 0x1, NULL },
    { "removeListenerWithImActorModelStorageMemoryListEngine_EngineListener:", "removeListener", "V", 0x1, NULL },
    { "updateSort", NULL, "V", 0x2, NULL },
    { "getList", NULL, "Ljava.util.ArrayList;", 0x1, NULL },
    { "addOrUpdateItemWithImActorModelMvvmListEngineItem:", "addOrUpdateItem", "V", 0x1, NULL },
    { "addOrUpdateItemsWithJavaUtilList:", "addOrUpdateItems", "V", 0x1, NULL },
    { "replaceItemsWithJavaUtilList:", "replaceItems", "V", 0x1, NULL },
    { "removeItemWithLong:", "removeItem", "V", 0x1, NULL },
    { "removeItemsWithLongArray:", "removeItems", "V", 0x1, NULL },
    { "clear", NULL, "V", 0x1, NULL },
    { "getValueWithLong:", "getValue", "TV;", 0x1, NULL },
    { "getHeadValue", NULL, "TV;", 0x1, NULL },
    { "getCount", NULL, "I", 0x1, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "items_", NULL, 0x2, "Ljava.util.HashMap;", NULL,  },
    { "sortList_", NULL, 0x2, "Ljava.util.ArrayList;", NULL,  },
    { "listeners_", NULL, 0x2, "Ljava.util.ArrayList;", NULL,  },
  };
  static const J2ObjcClassInfo _ImActorModelStorageMemoryListEngine = { 1, "MemoryListEngine", "im.actor.model.storage", NULL, 0x1, 14, methods, 3, fields, 0, NULL};
  return &_ImActorModelStorageMemoryListEngine;
}

@end

void ImActorModelStorageMemoryListEngine_updateSort(ImActorModelStorageMemoryListEngine *self) {
  [((JavaUtilArrayList *) nil_chk(self->sortList_)) clear];
  [self->sortList_ addAllWithJavaUtilCollection:[((JavaUtilHashMap *) nil_chk(self->items_)) values]];
  JavaUtilCollections_sortWithJavaUtilList_withJavaUtilComparator_(self->sortList_, [[[ImActorModelStorageMemoryListEngine_$1 alloc] init] autorelease]);
  for (id<ImActorModelStorageMemoryListEngine_EngineListener> __strong l in nil_chk(self->listeners_)) {
    [((id<ImActorModelStorageMemoryListEngine_EngineListener>) nil_chk(l)) onItemsChanged];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorModelStorageMemoryListEngine)

@interface ImActorModelStorageMemoryListEngine_EngineListener : NSObject
@end

@implementation ImActorModelStorageMemoryListEngine_EngineListener

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "onItemsChanged", NULL, "V", 0x401, NULL },
  };
  static const J2ObjcClassInfo _ImActorModelStorageMemoryListEngine_EngineListener = { 1, "EngineListener", "im.actor.model.storage", "MemoryListEngine", 0x201, 1, methods, 0, NULL, 0, NULL};
  return &_ImActorModelStorageMemoryListEngine_EngineListener;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(ImActorModelStorageMemoryListEngine_EngineListener)

@implementation ImActorModelStorageMemoryListEngine_$1

- (jint)compareWithId:(id<ImActorModelMvvmListEngineItem>)o1
               withId:(id<ImActorModelMvvmListEngineItem>)o2 {
  return [self compareWithLong:[((id<ImActorModelMvvmListEngineItem>) nil_chk(o2)) getListSortKey] withLong:[((id<ImActorModelMvvmListEngineItem>) nil_chk(o1)) getListSortKey]];
}

- (jint)compareWithLong:(jlong)x
               withLong:(jlong)y {
  return (x < y) ? -1 : ((x == y) ? 0 : 1);
}

- (instancetype)init {
  return [super init];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "compareWithImActorModelMvvmListEngineItem:withImActorModelMvvmListEngineItem:", "compare", "I", 0x1, NULL },
    { "compareWithLong:withLong:", "compare", "I", 0x1, NULL },
    { "init", NULL, NULL, 0x0, NULL },
  };
  static const J2ObjcClassInfo _ImActorModelStorageMemoryListEngine_$1 = { 1, "$1", "im.actor.model.storage", "MemoryListEngine", 0x8000, 3, methods, 0, NULL, 0, NULL};
  return &_ImActorModelStorageMemoryListEngine_$1;
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorModelStorageMemoryListEngine_$1)
