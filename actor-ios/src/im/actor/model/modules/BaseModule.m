//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-model/actor-ios/build/java/im/actor/model/modules/BaseModule.java
//

#include "J2ObjC_source.h"
#include "im/actor/model/Configuration.h"
#include "im/actor/model/concurrency/MainThread.h"
#include "im/actor/model/modules/Auth.h"
#include "im/actor/model/modules/BaseModule.h"
#include "im/actor/model/modules/Modules.h"
#include "im/actor/model/modules/Updates.h"
#include "im/actor/model/modules/Users.h"
#include "im/actor/model/mvvm/KeyValueEngine.h"
#include "im/actor/model/network/ActorApi.h"
#include "im/actor/model/network/RpcCallback.h"
#include "im/actor/model/network/RpcException.h"
#include "im/actor/model/network/parser/Request.h"
#include "im/actor/model/network/parser/Response.h"
#include "im/actor/model/storage/PreferencesStorage.h"
#include "java/lang/Runnable.h"

@interface ImActorModelModulesBaseModule () {
 @public
  ImActorModelModulesModules *modules__;
}
@end

J2OBJC_FIELD_SETTER(ImActorModelModulesBaseModule, modules__, ImActorModelModulesModules *)

@implementation ImActorModelModulesBaseModule

- (instancetype)initWithImActorModelModulesModules:(ImActorModelModulesModules *)modules {
  if (self = [super init]) {
    self->modules__ = modules;
  }
  return self;
}

- (ImActorModelModulesModules *)modules {
  return modules__;
}

- (ImActorModelModulesUpdates *)updates {
  return [((ImActorModelModulesModules *) nil_chk(modules__)) getUpdatesModule];
}

- (void)runOnUiThreadWithJavaLangRunnable:(id<JavaLangRunnable>)runnable {
  [((id<ImActorModelConcurrencyMainThread>) nil_chk([((AMConfiguration *) nil_chk([((ImActorModelModulesModules *) nil_chk(modules__)) getConfiguration])) getMainThread])) runOnUiThreadWithJavaLangRunnable:runnable];
}

- (id<ImActorModelStoragePreferencesStorage>)preferences {
  return [((AMConfiguration *) nil_chk([((ImActorModelModulesModules *) nil_chk(modules__)) getConfiguration])) getPreferencesStorage];
}

- (jint)myUid {
  return [((ImActorModelModulesAuth *) nil_chk([((ImActorModelModulesModules *) nil_chk(modules__)) getAuthModule])) myUid];
}

- (void)requestWithImActorModelNetworkParserRequest:(ImActorModelNetworkParserRequest *)request
                                  withAMRpcCallback:(id<AMRpcCallback>)callback {
  [((AMActorApi *) nil_chk([((ImActorModelModulesModules *) nil_chk(modules__)) getActorApi])) requestWithImActorModelNetworkParserRequest:request withAMRpcCallback:callback];
}

- (void)requestWithImActorModelNetworkParserRequest:(ImActorModelNetworkParserRequest *)request {
  [((AMActorApi *) nil_chk([((ImActorModelModulesModules *) nil_chk(modules__)) getActorApi])) requestWithImActorModelNetworkParserRequest:request withAMRpcCallback:[[ImActorModelModulesBaseModule_$1 alloc] init]];
}

- (id<ImActorModelMvvmKeyValueEngine>)users {
  return [((ImActorModelModulesUsers *) nil_chk([((ImActorModelModulesModules *) nil_chk(modules__)) getUsersModule])) getUsers];
}

- (void)copyAllFieldsTo:(ImActorModelModulesBaseModule *)other {
  [super copyAllFieldsTo:other];
  other->modules__ = modules__;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithImActorModelModulesModules:", "BaseModule", NULL, 0x1, NULL },
    { "modules", NULL, "Lim.actor.model.modules.Modules;", 0x1, NULL },
    { "updates", NULL, "Lim.actor.model.modules.Updates;", 0x1, NULL },
    { "runOnUiThreadWithJavaLangRunnable:", "runOnUiThread", "V", 0x1, NULL },
    { "preferences", NULL, "Lim.actor.model.storage.PreferencesStorage;", 0x1, NULL },
    { "myUid", NULL, "I", 0x1, NULL },
    { "requestWithImActorModelNetworkParserRequest:withAMRpcCallback:", "request", "V", 0x1, NULL },
    { "requestWithImActorModelNetworkParserRequest:", "request", "V", 0x1, NULL },
    { "users", NULL, "Lim.actor.model.mvvm.KeyValueEngine;", 0x1, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "modules__", "modules", 0x2, "Lim.actor.model.modules.Modules;", NULL,  },
  };
  static const J2ObjcClassInfo _ImActorModelModulesBaseModule = { 1, "BaseModule", "im.actor.model.modules", NULL, 0x1, 9, methods, 1, fields, 0, NULL};
  return &_ImActorModelModulesBaseModule;
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorModelModulesBaseModule)

@implementation ImActorModelModulesBaseModule_$1

- (void)onResultWithImActorModelNetworkParserResponse:(ImActorModelNetworkParserResponse *)response {
}

- (void)onErrorWithAMRpcException:(AMRpcException *)e {
}

- (instancetype)init {
  return [super init];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "onResultWithImActorModelNetworkParserResponse:", "onResult", "V", 0x1, NULL },
    { "onErrorWithAMRpcException:", "onError", "V", 0x1, NULL },
    { "init", NULL, NULL, 0x0, NULL },
  };
  static const J2ObjcClassInfo _ImActorModelModulesBaseModule_$1 = { 1, "$1", "im.actor.model.modules", "BaseModule", 0x8000, 3, methods, 0, NULL, 0, NULL};
  return &_ImActorModelModulesBaseModule_$1;
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorModelModulesBaseModule_$1)
