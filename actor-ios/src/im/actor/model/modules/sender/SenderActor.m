//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-model/actor-ios/build/java/im/actor/model/modules/sender/SenderActor.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "im/actor/model/Configuration.h"
#include "im/actor/model/Messenger.h"
#include "im/actor/model/api/MessageContent.h"
#include "im/actor/model/api/OutPeer.h"
#include "im/actor/model/api/Peer.h"
#include "im/actor/model/api/PeerType.h"
#include "im/actor/model/api/TextMessage.h"
#include "im/actor/model/api/rpc/RequestSendMessage.h"
#include "im/actor/model/api/rpc/ResponseSeqDate.h"
#include "im/actor/model/api/updates/UpdateMessageSent.h"
#include "im/actor/model/droidkit/actors/ActorRef.h"
#include "im/actor/model/droidkit/actors/conf/EnvConfig.h"
#include "im/actor/model/droidkit/actors/conf/JavaFactory.h"
#include "im/actor/model/entity/Message.h"
#include "im/actor/model/entity/MessageState.h"
#include "im/actor/model/entity/Peer.h"
#include "im/actor/model/entity/PeerType.h"
#include "im/actor/model/entity/User.h"
#include "im/actor/model/entity/content/AbsContent.h"
#include "im/actor/model/entity/content/TextContent.h"
#include "im/actor/model/modules/Messages.h"
#include "im/actor/model/modules/Updates.h"
#include "im/actor/model/modules/sender/SenderActor.h"
#include "im/actor/model/modules/utils/ModuleActor.h"
#include "im/actor/model/modules/utils/RandomUtils.h"
#include "im/actor/model/mvvm/KeyValueEngine.h"
#include "im/actor/model/network/RpcException.h"

__attribute__((unused)) static void ImActorModelModulesSenderSenderActor_sendMessageWithImActorModelEntityPeer_withLong_withLong_withImActorModelEntityContentAbsContent_(ImActorModelModulesSenderSenderActor *self, ImActorModelEntityPeer *peer, jlong rid, jlong time, ImActorModelEntityContentAbsContent *content);

@interface ImActorModelModulesSenderSenderActor ()

- (void)sendMessageWithImActorModelEntityPeer:(ImActorModelEntityPeer *)peer
                                     withLong:(jlong)rid
                                     withLong:(jlong)time
      withImActorModelEntityContentAbsContent:(ImActorModelEntityContentAbsContent *)content;
@end

@interface ImActorModelModulesSenderSenderActor_SendMessage () {
 @public
  ImActorModelEntityPeer *peer_;
  ImActorModelEntityContentAbsContent *content_;
}
@end

J2OBJC_FIELD_SETTER(ImActorModelModulesSenderSenderActor_SendMessage, peer_, ImActorModelEntityPeer *)
J2OBJC_FIELD_SETTER(ImActorModelModulesSenderSenderActor_SendMessage, content_, ImActorModelEntityContentAbsContent *)

@interface ImActorModelModulesSenderSenderActor_MessageSent () {
 @public
  jlong rid_;
  jlong date_;
}
@end

@interface ImActorModelModulesSenderSenderActor_$1 () {
 @public
  ImActorModelModulesSenderSenderActor *this$0_;
  ImActorModelApiPeer *val$apiPeer_;
  jlong val$rid_;
}
@end

J2OBJC_FIELD_SETTER(ImActorModelModulesSenderSenderActor_$1, this$0_, ImActorModelModulesSenderSenderActor *)
J2OBJC_FIELD_SETTER(ImActorModelModulesSenderSenderActor_$1, val$apiPeer_, ImActorModelApiPeer *)

@implementation ImActorModelModulesSenderSenderActor

- (instancetype)initWithAMMessenger:(AMMessenger *)messenger {
  return [super initWithAMMessenger:messenger];
}

- (void)preStart {
  if ([((AMConfiguration *) nil_chk([((AMMessenger *) nil_chk([self getMessenger])) getConfiguration])) isPersistMessages]) {
  }
}

- (void)onReceiveWithId:(id)message {
  if ([message isKindOfClass:[ImActorModelModulesSenderSenderActor_SendMessage class]]) {
    ImActorModelModulesSenderSenderActor_SendMessage *sendMessage = (ImActorModelModulesSenderSenderActor_SendMessage *) check_class_cast(message, [ImActorModelModulesSenderSenderActor_SendMessage class]);
    ImActorModelModulesSenderSenderActor_sendMessageWithImActorModelEntityPeer_withLong_withLong_withImActorModelEntityContentAbsContent_(self, ((ImActorModelModulesSenderSenderActor_SendMessage *) nil_chk(sendMessage))->peer_, ImActorModelModulesUtilsRandomUtils_nextRid(), [((id<ImActorModelDroidkitActorsConfJavaFactory>) nil_chk(ImActorModelDroidkitActorsConfEnvConfig_getJavaFactory())) getCurrentTime], sendMessage->content_);
  }
  else if ([message isKindOfClass:[ImActorModelModulesSenderSenderActor_MessageSent class]]) {
  }
}

- (void)sendMessageWithImActorModelEntityPeer:(ImActorModelEntityPeer *)peer
                                     withLong:(jlong)rid
                                     withLong:(jlong)time
      withImActorModelEntityContentAbsContent:(ImActorModelEntityContentAbsContent *)content {
  ImActorModelModulesSenderSenderActor_sendMessageWithImActorModelEntityPeer_withLong_withLong_withImActorModelEntityContentAbsContent_(self, peer, rid, time, content);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithAMMessenger:", "SenderActor", NULL, 0x1, NULL },
    { "preStart", NULL, "V", 0x1, NULL },
    { "onReceiveWithId:", "onReceive", "V", 0x1, NULL },
    { "sendMessageWithImActorModelEntityPeer:withLong:withLong:withImActorModelEntityContentAbsContent:", "sendMessage", "V", 0x2, NULL },
  };
  static const J2ObjcClassInfo _ImActorModelModulesSenderSenderActor = { 1, "SenderActor", "im.actor.model.modules.sender", NULL, 0x1, 4, methods, 0, NULL, 0, NULL};
  return &_ImActorModelModulesSenderSenderActor;
}

@end

void ImActorModelModulesSenderSenderActor_sendMessageWithImActorModelEntityPeer_withLong_withLong_withImActorModelEntityContentAbsContent_(ImActorModelModulesSenderSenderActor *self, ImActorModelEntityPeer *peer, jlong rid, jlong time, ImActorModelEntityContentAbsContent *content) {
  ImActorModelApiOutPeer *outPeer;
  ImActorModelApiPeer *apiPeer;
  if ([((ImActorModelEntityPeer *) nil_chk(peer)) getPeerType] == ImActorModelEntityPeerTypeEnum_get_PRIVATE()) {
    ImActorModelEntityUser *user = [((id<ImActorModelMvvmKeyValueEngine>) nil_chk([((AMMessenger *) nil_chk([self getMessenger])) getUsers])) getValueWithLong:[peer getUid]];
    if (user == nil) {
      return;
    }
    outPeer = [[[ImActorModelApiOutPeer alloc] initWithImActorModelApiPeerTypeEnum:ImActorModelApiPeerTypeEnum_get_PRIVATE() withInt:[peer getPeerId] withLong:[((ImActorModelEntityUser *) nil_chk(user)) getAccessHash]] autorelease];
    apiPeer = [[[ImActorModelApiPeer alloc] initWithImActorModelApiPeerTypeEnum:ImActorModelApiPeerTypeEnum_get_PRIVATE() withInt:[peer getPeerId]] autorelease];
  }
  else {
    return;
  }
  ImActorModelApiMessageContent *outContent;
  if ([content isKindOfClass:[ImActorModelEntityContentTextContent class]]) {
    outContent = [[[ImActorModelApiMessageContent alloc] initWithInt:(jint) 0x01 withByteArray:[((ImActorModelApiTextMessage *) [[[ImActorModelApiTextMessage alloc] initWithNSString:[((ImActorModelEntityContentTextContent *) nil_chk(((ImActorModelEntityContentTextContent *) check_class_cast(content, [ImActorModelEntityContentTextContent class])))) getText] withInt:0 withByteArray:[IOSByteArray arrayWithLength:0]] autorelease]) toByteArray]] autorelease];
  }
  else {
    return;
  }
  [((ImActorModelDroidkitActorsActorRef *) nil_chk([((ImActorModelModulesMessages *) nil_chk([((AMMessenger *) nil_chk([self getMessenger])) getMessagesModule])) getConversationActorWithImActorModelEntityPeer:peer])) sendWithId:[[[ImActorModelEntityMessage alloc] initWithLong:rid withLong:time withLong:time withInt:[((AMMessenger *) nil_chk([self getMessenger])) myUid] withImActorModelEntityMessageStateEnum:ImActorModelEntityMessageStateEnum_get_PENDING() withImActorModelEntityContentAbsContent:content] autorelease]];
  [self requestWithImActorModelNetworkParserRequest:[[[ImActorModelApiRpcRequestSendMessage alloc] initWithImActorModelApiOutPeer:outPeer withLong:rid withImActorModelApiMessageContent:outContent] autorelease] withAMRpcCallback:[[[ImActorModelModulesSenderSenderActor_$1 alloc] initWithImActorModelModulesSenderSenderActor:self withImActorModelApiPeer:apiPeer withLong:rid] autorelease]];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorModelModulesSenderSenderActor)

@implementation ImActorModelModulesSenderSenderActor_SendMessage

- (instancetype)initWithImActorModelEntityPeer:(ImActorModelEntityPeer *)peer
       withImActorModelEntityContentAbsContent:(ImActorModelEntityContentAbsContent *)content {
  if (self = [super init]) {
    ImActorModelModulesSenderSenderActor_SendMessage_set_peer_(self, peer);
    ImActorModelModulesSenderSenderActor_SendMessage_set_content_(self, content);
  }
  return self;
}

- (ImActorModelEntityPeer *)getPeer {
  return peer_;
}

- (ImActorModelEntityContentAbsContent *)getContent {
  return content_;
}

- (void)dealloc {
  RELEASE_(peer_);
  RELEASE_(content_);
  [super dealloc];
}

- (void)copyAllFieldsTo:(ImActorModelModulesSenderSenderActor_SendMessage *)other {
  [super copyAllFieldsTo:other];
  ImActorModelModulesSenderSenderActor_SendMessage_set_peer_(other, peer_);
  ImActorModelModulesSenderSenderActor_SendMessage_set_content_(other, content_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithImActorModelEntityPeer:withImActorModelEntityContentAbsContent:", "SendMessage", NULL, 0x1, NULL },
    { "getPeer", NULL, "Lim.actor.model.entity.Peer;", 0x1, NULL },
    { "getContent", NULL, "Lim.actor.model.entity.content.AbsContent;", 0x1, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "peer_", NULL, 0x2, "Lim.actor.model.entity.Peer;", NULL,  },
    { "content_", NULL, 0x2, "Lim.actor.model.entity.content.AbsContent;", NULL,  },
  };
  static const J2ObjcClassInfo _ImActorModelModulesSenderSenderActor_SendMessage = { 1, "SendMessage", "im.actor.model.modules.sender", "SenderActor", 0x9, 3, methods, 2, fields, 0, NULL};
  return &_ImActorModelModulesSenderSenderActor_SendMessage;
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorModelModulesSenderSenderActor_SendMessage)

@implementation ImActorModelModulesSenderSenderActor_MessageSent

- (instancetype)initWithLong:(jlong)rid
                    withLong:(jlong)date {
  if (self = [super init]) {
    self->rid_ = rid;
    self->date_ = date;
  }
  return self;
}

- (jlong)getRid {
  return rid_;
}

- (jlong)getDate {
  return date_;
}

- (void)copyAllFieldsTo:(ImActorModelModulesSenderSenderActor_MessageSent *)other {
  [super copyAllFieldsTo:other];
  other->rid_ = rid_;
  other->date_ = date_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithLong:withLong:", "MessageSent", NULL, 0x1, NULL },
    { "getRid", NULL, "J", 0x1, NULL },
    { "getDate", NULL, "J", 0x1, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "rid_", NULL, 0x2, "J", NULL,  },
    { "date_", NULL, 0x2, "J", NULL,  },
  };
  static const J2ObjcClassInfo _ImActorModelModulesSenderSenderActor_MessageSent = { 1, "MessageSent", "im.actor.model.modules.sender", "SenderActor", 0x9, 3, methods, 2, fields, 0, NULL};
  return &_ImActorModelModulesSenderSenderActor_MessageSent;
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorModelModulesSenderSenderActor_MessageSent)

@implementation ImActorModelModulesSenderSenderActor_$1

- (void)onResultWithImActorModelNetworkParserResponse:(ImActorModelApiRpcResponseSeqDate *)response {
  [((ImActorModelModulesUpdates *) nil_chk([((AMMessenger *) nil_chk([this$0_ getMessenger])) getUpdatesModule])) onUpdateReceivedWithId:[[[ImActorModelApiUpdatesUpdateMessageSent alloc] initWithImActorModelApiPeer:val$apiPeer_ withLong:val$rid_ withLong:[((ImActorModelApiRpcResponseSeqDate *) nil_chk(response)) getDate]] autorelease]];
}

- (void)onErrorWithAMRpcException:(AMRpcException *)e {
}

- (instancetype)initWithImActorModelModulesSenderSenderActor:(ImActorModelModulesSenderSenderActor *)outer$
                                     withImActorModelApiPeer:(ImActorModelApiPeer *)capture$0
                                                    withLong:(jlong)capture$1 {
  ImActorModelModulesSenderSenderActor_$1_set_this$0_(self, outer$);
  ImActorModelModulesSenderSenderActor_$1_set_val$apiPeer_(self, capture$0);
  val$rid_ = capture$1;
  return [super init];
}

- (void)dealloc {
  RELEASE_(this$0_);
  RELEASE_(val$apiPeer_);
  [super dealloc];
}

- (void)copyAllFieldsTo:(ImActorModelModulesSenderSenderActor_$1 *)other {
  [super copyAllFieldsTo:other];
  ImActorModelModulesSenderSenderActor_$1_set_this$0_(other, this$0_);
  ImActorModelModulesSenderSenderActor_$1_set_val$apiPeer_(other, val$apiPeer_);
  other->val$rid_ = val$rid_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "onResultWithImActorModelApiRpcResponseSeqDate:", "onResult", "V", 0x1, NULL },
    { "onErrorWithAMRpcException:", "onError", "V", 0x1, NULL },
    { "initWithImActorModelModulesSenderSenderActor:withImActorModelApiPeer:withLong:", "init", NULL, 0x0, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lim.actor.model.modules.sender.SenderActor;", NULL,  },
    { "val$apiPeer_", NULL, 0x1012, "Lim.actor.model.api.Peer;", NULL,  },
    { "val$rid_", NULL, 0x1012, "J", NULL,  },
  };
  static const J2ObjcClassInfo _ImActorModelModulesSenderSenderActor_$1 = { 1, "$1", "im.actor.model.modules.sender", "SenderActor", 0x8000, 3, methods, 3, fields, 0, NULL};
  return &_ImActorModelModulesSenderSenderActor_$1;
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorModelModulesSenderSenderActor_$1)
