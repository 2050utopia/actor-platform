//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-model/actor-ios/build/java/im/actor/model/modules/updates/MessagesProcessor.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "im/actor/model/Messenger.h"
#include "im/actor/model/api/Dialog.h"
#include "im/actor/model/api/MessageContent.h"
#include "im/actor/model/api/MessageState.h"
#include "im/actor/model/api/Peer.h"
#include "im/actor/model/api/TextMessage.h"
#include "im/actor/model/api/rpc/ResponseLoadDialogs.h"
#include "im/actor/model/droidkit/actors/ActorRef.h"
#include "im/actor/model/droidkit/bser/Bser.h"
#include "im/actor/model/droidkit/bser/BserObject.h"
#include "im/actor/model/entity/Message.h"
#include "im/actor/model/entity/MessageState.h"
#include "im/actor/model/entity/Peer.h"
#include "im/actor/model/entity/content/AbsContent.h"
#include "im/actor/model/entity/content/TextContent.h"
#include "im/actor/model/modules/Messages.h"
#include "im/actor/model/modules/entity/DialogHistory.h"
#include "im/actor/model/modules/entity/EntityConverter.h"
#include "im/actor/model/modules/messages/ConversationActor.h"
#include "im/actor/model/modules/messages/DialogsActor.h"
#include "im/actor/model/modules/messages/DialogsHistoryActor.h"
#include "im/actor/model/modules/updates/MessagesProcessor.h"
#include "java/io/IOException.h"
#include "java/lang/Math.h"
#include "java/lang/System.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"

__attribute__((unused)) static ImActorModelEntityContentAbsContent *ImActorModelModulesUpdatesMessagesProcessor_convertContentWithImActorModelApiMessageContent_(ImActorModelModulesUpdatesMessagesProcessor *self, ImActorModelApiMessageContent *content);
__attribute__((unused)) static ImActorModelEntityMessageStateEnum *ImActorModelModulesUpdatesMessagesProcessor_convertWithImActorModelApiMessageStateEnum_(ImActorModelModulesUpdatesMessagesProcessor *self, ImActorModelApiMessageStateEnum *state);

@interface ImActorModelModulesUpdatesMessagesProcessor () {
 @public
  AMMessenger *messenger_;
}

- (jlong)buildSortKey;

- (ImActorModelEntityContentAbsContent *)convertContentWithImActorModelApiMessageContent:(ImActorModelApiMessageContent *)content;

- (ImActorModelEntityMessageStateEnum *)convertWithImActorModelApiMessageStateEnum:(ImActorModelApiMessageStateEnum *)state;
@end

J2OBJC_FIELD_SETTER(ImActorModelModulesUpdatesMessagesProcessor, messenger_, AMMessenger *)

@implementation ImActorModelModulesUpdatesMessagesProcessor

- (instancetype)initWithAMMessenger:(AMMessenger *)messenger {
  if (self = [super init]) {
    ImActorModelModulesUpdatesMessagesProcessor_set_messenger_(self, messenger);
  }
  return self;
}

- (jlong)buildSortKey {
  return JavaLangSystem_currentTimeMillis();
}

- (void)onDialogsLoadedWithImActorModelApiRpcResponseLoadDialogs:(ImActorModelApiRpcResponseLoadDialogs *)dialogsResponse {
  JavaUtilArrayList *dialogs = [[[JavaUtilArrayList alloc] init] autorelease];
  jlong maxLoadedDate = 0;
  for (ImActorModelApiDialog * __strong dialog in nil_chk([((ImActorModelApiRpcResponseLoadDialogs *) nil_chk(dialogsResponse)) getDialogs])) {
    maxLoadedDate = JavaLangMath_maxWithLong_withLong_([((ImActorModelApiDialog *) nil_chk(dialog)) getSortDate], maxLoadedDate);
    ImActorModelEntityPeer *peer = ImActorModelModulesEntityEntityConverter_convertWithImActorModelApiPeer_([dialog getPeer]);
    ImActorModelEntityContentAbsContent *msgContent = ImActorModelModulesUpdatesMessagesProcessor_convertContentWithImActorModelApiMessageContent_(self, [dialog getMessage]);
    if (msgContent == nil) {
      continue;
    }
    [dialogs addWithId:[[[ImActorModelModulesEntityDialogHistory alloc] initWithImActorModelEntityPeer:peer withInt:[dialog getUnreadCount] withLong:[dialog getSortDate] withLong:[dialog getRid] withLong:[dialog getDate] withInt:[dialog getSenderUid] withImActorModelEntityContentAbsContent:msgContent withImActorModelEntityMessageStateEnum:ImActorModelModulesUpdatesMessagesProcessor_convertWithImActorModelApiMessageStateEnum_(self, [dialog getState])] autorelease]];
  }
  [((ImActorModelDroidkitActorsActorRef *) nil_chk([((ImActorModelModulesMessages *) nil_chk([((AMMessenger *) nil_chk(messenger_)) getMessagesModule])) getDialogsActor])) sendWithId:[[[ImActorModelModulesMessagesDialogsActor_HistoryLoaded alloc] initWithJavaUtilList:dialogs] autorelease]];
  [((ImActorModelDroidkitActorsActorRef *) nil_chk([((ImActorModelModulesMessages *) nil_chk([messenger_ getMessagesModule])) getDialogsHistoryActor])) sendWithId:[[[ImActorModelModulesMessagesDialogsHistoryActor_LoadedMore alloc] initWithBoolean:maxLoadedDate == 0 withLong:maxLoadedDate] autorelease]];
}

- (void)onMessageWithImActorModelApiPeer:(ImActorModelApiPeer *)_peer
                                 withInt:(jint)senderUid
                                withLong:(jlong)date
                                withLong:(jlong)rid
       withImActorModelApiMessageContent:(ImActorModelApiMessageContent *)content {
  ImActorModelEntityPeer *peer = ImActorModelModulesEntityEntityConverter_convertWithImActorModelApiPeer_(_peer);
  ImActorModelEntityContentAbsContent *msgContent = ImActorModelModulesUpdatesMessagesProcessor_convertContentWithImActorModelApiMessageContent_(self, content);
  if (msgContent == nil) {
    return;
  }
  ImActorModelEntityMessage *message = [[[ImActorModelEntityMessage alloc] initWithLong:rid withLong:date withLong:date withInt:senderUid withImActorModelEntityMessageStateEnum:[((AMMessenger *) nil_chk(messenger_)) myUid] == senderUid ? ImActorModelEntityMessageStateEnum_get_SENT() : ImActorModelEntityMessageStateEnum_get_UNKNOWN() withImActorModelEntityContentAbsContent:msgContent] autorelease];
  [((ImActorModelDroidkitActorsActorRef *) nil_chk([((ImActorModelModulesMessages *) nil_chk([messenger_ getMessagesModule])) getConversationActorWithImActorModelEntityPeer:peer])) sendWithId:message];
}

- (void)onMessageReadWithImActorModelApiPeer:(ImActorModelApiPeer *)_peer
                                    withLong:(jlong)startDate
                                    withLong:(jlong)readDate {
  ImActorModelEntityPeer *peer = ImActorModelModulesEntityEntityConverter_convertWithImActorModelApiPeer_(_peer);
  [((ImActorModelDroidkitActorsActorRef *) nil_chk([((ImActorModelModulesMessages *) nil_chk([((AMMessenger *) nil_chk(messenger_)) getMessagesModule])) getConversationActorWithImActorModelEntityPeer:peer])) sendWithId:[[[ImActorModelModulesMessagesConversationActor_MessageRead alloc] initWithLong:startDate] autorelease]];
}

- (void)onMessageEncryptedReadWithImActorModelApiPeer:(ImActorModelApiPeer *)_peer
                                             withLong:(jlong)rid
                                             withLong:(jlong)readDate {
  ImActorModelEntityPeer *peer = ImActorModelModulesEntityEntityConverter_convertWithImActorModelApiPeer_(_peer);
}

- (void)onMessageReceivedWithImActorModelApiPeer:(ImActorModelApiPeer *)_peer
                                        withLong:(jlong)startDate
                                        withLong:(jlong)receivedDate {
  ImActorModelEntityPeer *peer = ImActorModelModulesEntityEntityConverter_convertWithImActorModelApiPeer_(_peer);
  [((ImActorModelDroidkitActorsActorRef *) nil_chk([((ImActorModelModulesMessages *) nil_chk([((AMMessenger *) nil_chk(messenger_)) getMessagesModule])) getConversationActorWithImActorModelEntityPeer:peer])) sendWithId:[[[ImActorModelModulesMessagesConversationActor_MessageReceived alloc] initWithLong:startDate] autorelease]];
}

- (void)onMessageEncryptedReceivedWithImActorModelApiPeer:(ImActorModelApiPeer *)_peer
                                                 withLong:(jlong)rid
                                                 withLong:(jlong)receivedDate {
  ImActorModelEntityPeer *peer = ImActorModelModulesEntityEntityConverter_convertWithImActorModelApiPeer_(_peer);
}

- (void)onMessageReadByMeWithImActorModelApiPeer:(ImActorModelApiPeer *)_peer
                                        withLong:(jlong)startDate {
  ImActorModelEntityPeer *peer = ImActorModelModulesEntityEntityConverter_convertWithImActorModelApiPeer_(_peer);
}

- (void)onMessageEncryptedReadByMeWithImActorModelApiPeer:(ImActorModelApiPeer *)_peer
                                                 withLong:(jlong)rid {
  ImActorModelEntityPeer *peer = ImActorModelModulesEntityEntityConverter_convertWithImActorModelApiPeer_(_peer);
}

- (void)onMessageDeleteWithImActorModelApiPeer:(ImActorModelApiPeer *)_peer
                              withJavaUtilList:(id<JavaUtilList>)rids {
  ImActorModelEntityPeer *peer = ImActorModelModulesEntityEntityConverter_convertWithImActorModelApiPeer_(_peer);
  [((ImActorModelDroidkitActorsActorRef *) nil_chk([((ImActorModelModulesMessages *) nil_chk([((AMMessenger *) nil_chk(messenger_)) getMessagesModule])) getConversationActorWithImActorModelEntityPeer:peer])) sendWithId:[[[ImActorModelModulesMessagesConversationActor_MessageDeleted alloc] initWithJavaUtilList:rids] autorelease]];
}

- (void)onMessageSentWithImActorModelApiPeer:(ImActorModelApiPeer *)_peer
                                    withLong:(jlong)rid
                                    withLong:(jlong)date {
  ImActorModelEntityPeer *peer = ImActorModelModulesEntityEntityConverter_convertWithImActorModelApiPeer_(_peer);
  [((ImActorModelDroidkitActorsActorRef *) nil_chk([((ImActorModelModulesMessages *) nil_chk([((AMMessenger *) nil_chk(messenger_)) getMessagesModule])) getConversationActorWithImActorModelEntityPeer:peer])) sendWithId:[[[ImActorModelModulesMessagesConversationActor_MessageSent alloc] initWithLong:rid withLong:date] autorelease]];
}

- (void)onChatClearWithImActorModelApiPeer:(ImActorModelApiPeer *)_peer {
  ImActorModelEntityPeer *peer = ImActorModelModulesEntityEntityConverter_convertWithImActorModelApiPeer_(_peer);
  [((ImActorModelDroidkitActorsActorRef *) nil_chk([((ImActorModelModulesMessages *) nil_chk([((AMMessenger *) nil_chk(messenger_)) getMessagesModule])) getDialogsActor])) sendWithId:[[[ImActorModelModulesMessagesDialogsActor_ChatClear alloc] initWithImActorModelEntityPeer:peer] autorelease]];
}

- (void)onChatDeleteWithImActorModelApiPeer:(ImActorModelApiPeer *)_peer {
  ImActorModelEntityPeer *peer = ImActorModelModulesEntityEntityConverter_convertWithImActorModelApiPeer_(_peer);
  [((ImActorModelDroidkitActorsActorRef *) nil_chk([((ImActorModelModulesMessages *) nil_chk([((AMMessenger *) nil_chk(messenger_)) getMessagesModule])) getDialogsActor])) sendWithId:[[[ImActorModelModulesMessagesDialogsActor_ChatDelete alloc] initWithImActorModelEntityPeer:peer] autorelease]];
}

- (void)onUserRegisteredWithInt:(jint)uid {
}

- (ImActorModelEntityContentAbsContent *)convertContentWithImActorModelApiMessageContent:(ImActorModelApiMessageContent *)content {
  return ImActorModelModulesUpdatesMessagesProcessor_convertContentWithImActorModelApiMessageContent_(self, content);
}

- (ImActorModelEntityMessageStateEnum *)convertWithImActorModelApiMessageStateEnum:(ImActorModelApiMessageStateEnum *)state {
  return ImActorModelModulesUpdatesMessagesProcessor_convertWithImActorModelApiMessageStateEnum_(self, state);
}

- (void)dealloc {
  RELEASE_(messenger_);
  [super dealloc];
}

- (void)copyAllFieldsTo:(ImActorModelModulesUpdatesMessagesProcessor *)other {
  [super copyAllFieldsTo:other];
  ImActorModelModulesUpdatesMessagesProcessor_set_messenger_(other, messenger_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithAMMessenger:", "MessagesProcessor", NULL, 0x1, NULL },
    { "buildSortKey", NULL, "J", 0x2, NULL },
    { "onDialogsLoadedWithImActorModelApiRpcResponseLoadDialogs:", "onDialogsLoaded", "V", 0x1, NULL },
    { "onMessageWithImActorModelApiPeer:withInt:withLong:withLong:withImActorModelApiMessageContent:", "onMessage", "V", 0x1, NULL },
    { "onMessageReadWithImActorModelApiPeer:withLong:withLong:", "onMessageRead", "V", 0x1, NULL },
    { "onMessageEncryptedReadWithImActorModelApiPeer:withLong:withLong:", "onMessageEncryptedRead", "V", 0x1, NULL },
    { "onMessageReceivedWithImActorModelApiPeer:withLong:withLong:", "onMessageReceived", "V", 0x1, NULL },
    { "onMessageEncryptedReceivedWithImActorModelApiPeer:withLong:withLong:", "onMessageEncryptedReceived", "V", 0x1, NULL },
    { "onMessageReadByMeWithImActorModelApiPeer:withLong:", "onMessageReadByMe", "V", 0x1, NULL },
    { "onMessageEncryptedReadByMeWithImActorModelApiPeer:withLong:", "onMessageEncryptedReadByMe", "V", 0x1, NULL },
    { "onMessageDeleteWithImActorModelApiPeer:withJavaUtilList:", "onMessageDelete", "V", 0x1, NULL },
    { "onMessageSentWithImActorModelApiPeer:withLong:withLong:", "onMessageSent", "V", 0x1, NULL },
    { "onChatClearWithImActorModelApiPeer:", "onChatClear", "V", 0x1, NULL },
    { "onChatDeleteWithImActorModelApiPeer:", "onChatDelete", "V", 0x1, NULL },
    { "onUserRegisteredWithInt:", "onUserRegistered", "V", 0x1, NULL },
    { "convertContentWithImActorModelApiMessageContent:", "convertContent", "Lim.actor.model.entity.content.AbsContent;", 0x2, NULL },
    { "convertWithImActorModelApiMessageStateEnum:", "convert", "Lim.actor.model.entity.MessageState;", 0x2, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "messenger_", NULL, 0x2, "Lim.actor.model.Messenger;", NULL,  },
  };
  static const J2ObjcClassInfo _ImActorModelModulesUpdatesMessagesProcessor = { 1, "MessagesProcessor", "im.actor.model.modules.updates", NULL, 0x1, 17, methods, 1, fields, 0, NULL};
  return &_ImActorModelModulesUpdatesMessagesProcessor;
}

@end

ImActorModelEntityContentAbsContent *ImActorModelModulesUpdatesMessagesProcessor_convertContentWithImActorModelApiMessageContent_(ImActorModelModulesUpdatesMessagesProcessor *self, ImActorModelApiMessageContent *content) {
  if ([((ImActorModelApiMessageContent *) nil_chk(content)) getType] == (jint) 0x01) {
    @try {
      ImActorModelApiTextMessage *textMessage = ((ImActorModelApiTextMessage *) ImActorModelDroidkitBserBser_parseWithImActorModelDroidkitBserBserObject_withByteArray_([[[ImActorModelApiTextMessage alloc] init] autorelease], [content getContent]));
      return [[[ImActorModelEntityContentTextContent alloc] initWithNSString:[((ImActorModelApiTextMessage *) nil_chk(textMessage)) getText]] autorelease];
    }
    @catch (JavaIoIOException *e) {
      [((JavaIoIOException *) nil_chk(e)) printStackTrace];
    }
  }
  return nil;
}

ImActorModelEntityMessageStateEnum *ImActorModelModulesUpdatesMessagesProcessor_convertWithImActorModelApiMessageStateEnum_(ImActorModelModulesUpdatesMessagesProcessor *self, ImActorModelApiMessageStateEnum *state) {
  if (state == nil) {
    return nil;
  }
  switch ([state ordinal]) {
    case ImActorModelApiMessageState_READ:
    return ImActorModelEntityMessageStateEnum_get_READ();
    case ImActorModelApiMessageState_RECEIVED:
    return ImActorModelEntityMessageStateEnum_get_RECEIVED();
    case ImActorModelApiMessageState_SENT:
    return ImActorModelEntityMessageStateEnum_get_SENT();
  }
  return nil;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorModelModulesUpdatesMessagesProcessor)
