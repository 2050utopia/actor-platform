//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-model/actor-ios/build/java/im/actor/model/modules/updates/UpdateProcessor.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "im/actor/model/Messenger.h"
#include "im/actor/model/api/Avatar.h"
#include "im/actor/model/api/MessageContent.h"
#include "im/actor/model/api/Peer.h"
#include "im/actor/model/api/PeerType.h"
#include "im/actor/model/api/rpc/ResponseLoadDialogs.h"
#include "im/actor/model/api/updates/UpdateChatClear.h"
#include "im/actor/model/api/updates/UpdateChatDelete.h"
#include "im/actor/model/api/updates/UpdateContactMoved.h"
#include "im/actor/model/api/updates/UpdateContactRegistered.h"
#include "im/actor/model/api/updates/UpdateContactTitleChanged.h"
#include "im/actor/model/api/updates/UpdateContactsAdded.h"
#include "im/actor/model/api/updates/UpdateContactsRemoved.h"
#include "im/actor/model/api/updates/UpdateEncryptedMessage.h"
#include "im/actor/model/api/updates/UpdateEncryptedRead.h"
#include "im/actor/model/api/updates/UpdateEncryptedReadByMe.h"
#include "im/actor/model/api/updates/UpdateEncryptedReceived.h"
#include "im/actor/model/api/updates/UpdateGroupInvite.h"
#include "im/actor/model/api/updates/UpdateGroupUserAdded.h"
#include "im/actor/model/api/updates/UpdateGroupUserKick.h"
#include "im/actor/model/api/updates/UpdateGroupUserLeave.h"
#include "im/actor/model/api/updates/UpdateMessage.h"
#include "im/actor/model/api/updates/UpdateMessageDelete.h"
#include "im/actor/model/api/updates/UpdateMessageRead.h"
#include "im/actor/model/api/updates/UpdateMessageReadByMe.h"
#include "im/actor/model/api/updates/UpdateMessageReceived.h"
#include "im/actor/model/api/updates/UpdateMessageSent.h"
#include "im/actor/model/api/updates/UpdateUserAvatarChanged.h"
#include "im/actor/model/api/updates/UpdateUserContactAdded.h"
#include "im/actor/model/api/updates/UpdateUserContactRemoved.h"
#include "im/actor/model/api/updates/UpdateUserContactsChanged.h"
#include "im/actor/model/api/updates/UpdateUserLocalNameChanged.h"
#include "im/actor/model/api/updates/UpdateUserNameChanged.h"
#include "im/actor/model/api/updates/UpdateUserStateChanged.h"
#include "im/actor/model/modules/updates/GroupsProcessor.h"
#include "im/actor/model/modules/updates/MessagesProcessor.h"
#include "im/actor/model/modules/updates/UpdateProcessor.h"
#include "im/actor/model/modules/updates/UsersProcessor.h"
#include "im/actor/model/modules/updates/internal/DialogHistoryLoaded.h"
#include "im/actor/model/modules/updates/internal/InternalUpdate.h"
#include "im/actor/model/network/parser/Update.h"
#include "java/lang/Integer.h"
#include "java/util/HashSet.h"
#include "java/util/List.h"

@interface ImActorModelModulesUpdatesUpdateProcessor () {
 @public
  AMMessenger *messenger_;
  ImActorModelModulesUpdatesUsersProcessor *usersProcessor_;
  ImActorModelModulesUpdatesMessagesProcessor *messagesProcessor_;
  ImActorModelModulesUpdatesGroupsProcessor *groupsProcessor_;
}
@end

J2OBJC_FIELD_SETTER(ImActorModelModulesUpdatesUpdateProcessor, messenger_, AMMessenger *)
J2OBJC_FIELD_SETTER(ImActorModelModulesUpdatesUpdateProcessor, usersProcessor_, ImActorModelModulesUpdatesUsersProcessor *)
J2OBJC_FIELD_SETTER(ImActorModelModulesUpdatesUpdateProcessor, messagesProcessor_, ImActorModelModulesUpdatesMessagesProcessor *)
J2OBJC_FIELD_SETTER(ImActorModelModulesUpdatesUpdateProcessor, groupsProcessor_, ImActorModelModulesUpdatesGroupsProcessor *)

@implementation ImActorModelModulesUpdatesUpdateProcessor

- (instancetype)initWithAMMessenger:(AMMessenger *)messenger {
  if (self = [super init]) {
    ImActorModelModulesUpdatesUpdateProcessor_set_messenger_(self, messenger);
    ImActorModelModulesUpdatesUpdateProcessor_setAndConsume_usersProcessor_(self, [[ImActorModelModulesUpdatesUsersProcessor alloc] initWithAMMessenger:messenger]);
    ImActorModelModulesUpdatesUpdateProcessor_setAndConsume_messagesProcessor_(self, [[ImActorModelModulesUpdatesMessagesProcessor alloc] initWithAMMessenger:messenger]);
    ImActorModelModulesUpdatesUpdateProcessor_setAndConsume_groupsProcessor_(self, [[ImActorModelModulesUpdatesGroupsProcessor alloc] init]);
  }
  return self;
}

- (void)applyRelatedWithJavaUtilList:(id<JavaUtilList>)users
                    withJavaUtilList:(id<JavaUtilList>)groups
                    withJavaUtilList:(id<JavaUtilList>)contactRecords
                         withBoolean:(jboolean)force {
  [((ImActorModelModulesUpdatesUsersProcessor *) nil_chk(usersProcessor_)) applyUsersWithJavaUtilCollection:users withBoolean:force];
}

- (void)processInternalUpdateWithImActorModelModulesUpdatesInternalInternalUpdate:(ImActorModelModulesUpdatesInternalInternalUpdate *)update {
  if ([update isKindOfClass:[ImActorModelModulesUpdatesInternalDialogHistoryLoaded class]]) {
    ImActorModelApiRpcResponseLoadDialogs *dialogs = [((ImActorModelModulesUpdatesInternalDialogHistoryLoaded *) nil_chk(((ImActorModelModulesUpdatesInternalDialogHistoryLoaded *) check_class_cast(update, [ImActorModelModulesUpdatesInternalDialogHistoryLoaded class])))) getDialogs];
    [self applyRelatedWithJavaUtilList:[((ImActorModelApiRpcResponseLoadDialogs *) nil_chk(dialogs)) getUsers] withJavaUtilList:[dialogs getGroups] withJavaUtilList:nil withBoolean:NO];
    [((ImActorModelModulesUpdatesMessagesProcessor *) nil_chk(messagesProcessor_)) onDialogsLoadedWithImActorModelApiRpcResponseLoadDialogs:dialogs];
  }
}

- (void)processUpdateWithImActorModelNetworkParserUpdate:(ImActorModelNetworkParserUpdate *)update {
  if ([update isKindOfClass:[ImActorModelApiUpdatesUpdateUserContactAdded class]]) {
  }
  else if ([update isKindOfClass:[ImActorModelApiUpdatesUpdateUserContactRemoved class]]) {
  }
  else if ([update isKindOfClass:[ImActorModelApiUpdatesUpdateContactMoved class]]) {
  }
  else if ([update isKindOfClass:[ImActorModelApiUpdatesUpdateContactTitleChanged class]]) {
  }
  else if ([update isKindOfClass:[ImActorModelApiUpdatesUpdateUserContactsChanged class]]) {
  }
  else if ([update isKindOfClass:[ImActorModelApiUpdatesUpdateUserNameChanged class]]) {
    ImActorModelApiUpdatesUpdateUserNameChanged *userNameChanged = (ImActorModelApiUpdatesUpdateUserNameChanged *) check_class_cast(update, [ImActorModelApiUpdatesUpdateUserNameChanged class]);
    [((ImActorModelModulesUpdatesUsersProcessor *) nil_chk(usersProcessor_)) onUserNameChangedWithInt:[((ImActorModelApiUpdatesUpdateUserNameChanged *) nil_chk(userNameChanged)) getUid] withNSString:[userNameChanged getName]];
  }
  else if ([update isKindOfClass:[ImActorModelApiUpdatesUpdateUserLocalNameChanged class]]) {
    ImActorModelApiUpdatesUpdateUserLocalNameChanged *localNameChanged = (ImActorModelApiUpdatesUpdateUserLocalNameChanged *) check_class_cast(update, [ImActorModelApiUpdatesUpdateUserLocalNameChanged class]);
    [((ImActorModelModulesUpdatesUsersProcessor *) nil_chk(usersProcessor_)) onUserLocalNameChangedWithInt:[((ImActorModelApiUpdatesUpdateUserLocalNameChanged *) nil_chk(localNameChanged)) getUid] withNSString:[localNameChanged getLocalName]];
  }
  else if ([update isKindOfClass:[ImActorModelApiUpdatesUpdateUserAvatarChanged class]]) {
    ImActorModelApiUpdatesUpdateUserAvatarChanged *avatarChanged = (ImActorModelApiUpdatesUpdateUserAvatarChanged *) check_class_cast(update, [ImActorModelApiUpdatesUpdateUserAvatarChanged class]);
    [((ImActorModelModulesUpdatesUsersProcessor *) nil_chk(usersProcessor_)) onUserAvatarChangedWithInt:[((ImActorModelApiUpdatesUpdateUserAvatarChanged *) nil_chk(avatarChanged)) getUid] withImActorModelApiAvatar:[avatarChanged getAvatar]];
  }
  else if ([update isKindOfClass:[ImActorModelApiUpdatesUpdateUserStateChanged class]]) {
  }
  else if ([update isKindOfClass:[ImActorModelApiUpdatesUpdateMessage class]]) {
    ImActorModelApiUpdatesUpdateMessage *message = (ImActorModelApiUpdatesUpdateMessage *) check_class_cast(update, [ImActorModelApiUpdatesUpdateMessage class]);
    [((ImActorModelModulesUpdatesMessagesProcessor *) nil_chk(messagesProcessor_)) onMessageWithImActorModelApiPeer:[((ImActorModelApiUpdatesUpdateMessage *) nil_chk(message)) getPeer] withInt:[message getSenderUid] withLong:[message getDate] withLong:[message getRid] withImActorModelApiMessageContent:[message getMessage]];
  }
  else if ([update isKindOfClass:[ImActorModelApiUpdatesUpdateMessageRead class]]) {
    ImActorModelApiUpdatesUpdateMessageRead *messageRead = (ImActorModelApiUpdatesUpdateMessageRead *) check_class_cast(update, [ImActorModelApiUpdatesUpdateMessageRead class]);
    [((ImActorModelModulesUpdatesMessagesProcessor *) nil_chk(messagesProcessor_)) onMessageReadWithImActorModelApiPeer:[((ImActorModelApiUpdatesUpdateMessageRead *) nil_chk(messageRead)) getPeer] withLong:[messageRead getStartDate] withLong:[messageRead getReadDate]];
  }
  else if ([update isKindOfClass:[ImActorModelApiUpdatesUpdateMessageReadByMe class]]) {
    ImActorModelApiUpdatesUpdateMessageReadByMe *messageReadByMe = (ImActorModelApiUpdatesUpdateMessageReadByMe *) check_class_cast(update, [ImActorModelApiUpdatesUpdateMessageReadByMe class]);
    [((ImActorModelModulesUpdatesMessagesProcessor *) nil_chk(messagesProcessor_)) onMessageReadByMeWithImActorModelApiPeer:[((ImActorModelApiUpdatesUpdateMessageReadByMe *) nil_chk(messageReadByMe)) getPeer] withLong:[messageReadByMe getStartDate]];
  }
  else if ([update isKindOfClass:[ImActorModelApiUpdatesUpdateMessageReceived class]]) {
    ImActorModelApiUpdatesUpdateMessageReceived *received = (ImActorModelApiUpdatesUpdateMessageReceived *) check_class_cast(update, [ImActorModelApiUpdatesUpdateMessageReceived class]);
    [((ImActorModelModulesUpdatesMessagesProcessor *) nil_chk(messagesProcessor_)) onMessageReceivedWithImActorModelApiPeer:[((ImActorModelApiUpdatesUpdateMessageReceived *) nil_chk(received)) getPeer] withLong:[received getStartDate] withLong:[received getReceivedDate]];
  }
  else if ([update isKindOfClass:[ImActorModelApiUpdatesUpdateMessageDelete class]]) {
    ImActorModelApiUpdatesUpdateMessageDelete *messageDelete = (ImActorModelApiUpdatesUpdateMessageDelete *) check_class_cast(update, [ImActorModelApiUpdatesUpdateMessageDelete class]);
    [((ImActorModelModulesUpdatesMessagesProcessor *) nil_chk(messagesProcessor_)) onMessageDeleteWithImActorModelApiPeer:[((ImActorModelApiUpdatesUpdateMessageDelete *) nil_chk(messageDelete)) getPeer] withJavaUtilList:[messageDelete getRids]];
  }
  else if ([update isKindOfClass:[ImActorModelApiUpdatesUpdateMessageSent class]]) {
    ImActorModelApiUpdatesUpdateMessageSent *messageSent = (ImActorModelApiUpdatesUpdateMessageSent *) check_class_cast(update, [ImActorModelApiUpdatesUpdateMessageSent class]);
    [((ImActorModelModulesUpdatesMessagesProcessor *) nil_chk(messagesProcessor_)) onMessageSentWithImActorModelApiPeer:[((ImActorModelApiUpdatesUpdateMessageSent *) nil_chk(messageSent)) getPeer] withLong:[messageSent getRid] withLong:[messageSent getDate]];
  }
  else if ([update isKindOfClass:[ImActorModelApiUpdatesUpdateEncryptedMessage class]]) {
  }
  else if ([update isKindOfClass:[ImActorModelApiUpdatesUpdateEncryptedRead class]]) {
    ImActorModelApiUpdatesUpdateEncryptedRead *encryptedRead = (ImActorModelApiUpdatesUpdateEncryptedRead *) check_class_cast(update, [ImActorModelApiUpdatesUpdateEncryptedRead class]);
    [((ImActorModelModulesUpdatesMessagesProcessor *) nil_chk(messagesProcessor_)) onMessageEncryptedReadWithImActorModelApiPeer:[((ImActorModelApiUpdatesUpdateEncryptedRead *) nil_chk(encryptedRead)) getPeer] withLong:[encryptedRead getRid] withLong:[encryptedRead getReadDate]];
  }
  else if ([update isKindOfClass:[ImActorModelApiUpdatesUpdateEncryptedReadByMe class]]) {
    ImActorModelApiUpdatesUpdateEncryptedReadByMe *encryptedRead = (ImActorModelApiUpdatesUpdateEncryptedReadByMe *) check_class_cast(update, [ImActorModelApiUpdatesUpdateEncryptedReadByMe class]);
    [((ImActorModelModulesUpdatesMessagesProcessor *) nil_chk(messagesProcessor_)) onMessageEncryptedReadByMeWithImActorModelApiPeer:[((ImActorModelApiUpdatesUpdateEncryptedReadByMe *) nil_chk(encryptedRead)) getPeer] withLong:[encryptedRead getRid]];
  }
  else if ([update isKindOfClass:[ImActorModelApiUpdatesUpdateEncryptedReceived class]]) {
    ImActorModelApiUpdatesUpdateEncryptedReceived *received = (ImActorModelApiUpdatesUpdateEncryptedReceived *) check_class_cast(update, [ImActorModelApiUpdatesUpdateEncryptedReceived class]);
    [((ImActorModelModulesUpdatesMessagesProcessor *) nil_chk(messagesProcessor_)) onMessageEncryptedReceivedWithImActorModelApiPeer:[((ImActorModelApiUpdatesUpdateEncryptedReceived *) nil_chk(received)) getPeer] withLong:[received getRid] withLong:[received getReceivedDate]];
  }
  else if ([update isKindOfClass:[ImActorModelApiUpdatesUpdateChatClear class]]) {
    ImActorModelApiUpdatesUpdateChatClear *chatClear = (ImActorModelApiUpdatesUpdateChatClear *) check_class_cast(update, [ImActorModelApiUpdatesUpdateChatClear class]);
    [((ImActorModelModulesUpdatesMessagesProcessor *) nil_chk(messagesProcessor_)) onChatClearWithImActorModelApiPeer:[((ImActorModelApiUpdatesUpdateChatClear *) nil_chk(chatClear)) getPeer]];
  }
  else if ([update isKindOfClass:[ImActorModelApiUpdatesUpdateChatDelete class]]) {
    ImActorModelApiUpdatesUpdateChatDelete *chatDelete = (ImActorModelApiUpdatesUpdateChatDelete *) check_class_cast(update, [ImActorModelApiUpdatesUpdateChatDelete class]);
    [((ImActorModelModulesUpdatesMessagesProcessor *) nil_chk(messagesProcessor_)) onChatDeleteWithImActorModelApiPeer:[((ImActorModelApiUpdatesUpdateChatDelete *) nil_chk(chatDelete)) getPeer]];
  }
  else if ([update isKindOfClass:[ImActorModelApiUpdatesUpdateContactRegistered class]]) {
    [((ImActorModelModulesUpdatesMessagesProcessor *) nil_chk(messagesProcessor_)) onUserRegisteredWithInt:[((ImActorModelApiUpdatesUpdateContactRegistered *) nil_chk(((ImActorModelApiUpdatesUpdateContactRegistered *) check_class_cast(update, [ImActorModelApiUpdatesUpdateContactRegistered class])))) getUid]];
  }
}

- (jboolean)isCausesInvalidationWithImActorModelNetworkParserUpdate:(ImActorModelNetworkParserUpdate *)update {
  JavaUtilHashSet *users = [[[JavaUtilHashSet alloc] init] autorelease];
  JavaUtilHashSet *groups = [[[JavaUtilHashSet alloc] init] autorelease];
  JavaUtilHashSet *contacts = [[[JavaUtilHashSet alloc] init] autorelease];
  if ([update isKindOfClass:[ImActorModelApiUpdatesUpdateMessage class]]) {
    ImActorModelApiUpdatesUpdateMessage *updateMessage = (ImActorModelApiUpdatesUpdateMessage *) check_class_cast(update, [ImActorModelApiUpdatesUpdateMessage class]);
    [users addWithId:JavaLangInteger_valueOfWithInt_([((ImActorModelApiUpdatesUpdateMessage *) nil_chk(updateMessage)) getSenderUid])];
    if ([((ImActorModelApiPeer *) nil_chk([updateMessage getPeer])) getType] == ImActorModelApiPeerTypeEnum_get_GROUP()) {
      [groups addWithId:JavaLangInteger_valueOfWithInt_([((ImActorModelApiPeer *) nil_chk([updateMessage getPeer])) getId])];
    }
    if ([((ImActorModelApiPeer *) nil_chk([updateMessage getPeer])) getType] == ImActorModelApiPeerTypeEnum_get_PRIVATE()) {
      [users addWithId:JavaLangInteger_valueOfWithInt_([((ImActorModelApiPeer *) nil_chk([updateMessage getPeer])) getId])];
    }
  }
  else if ([update isKindOfClass:[ImActorModelApiUpdatesUpdateEncryptedMessage class]]) {
    ImActorModelApiUpdatesUpdateEncryptedMessage *updateMessage = (ImActorModelApiUpdatesUpdateEncryptedMessage *) check_class_cast(update, [ImActorModelApiUpdatesUpdateEncryptedMessage class]);
    [users addWithId:JavaLangInteger_valueOfWithInt_([((ImActorModelApiUpdatesUpdateEncryptedMessage *) nil_chk(updateMessage)) getSenderUid])];
    if ([((ImActorModelApiPeer *) nil_chk([updateMessage getPeer])) getType] == ImActorModelApiPeerTypeEnum_get_GROUP()) {
      [groups addWithId:JavaLangInteger_valueOfWithInt_([((ImActorModelApiPeer *) nil_chk([updateMessage getPeer])) getId])];
    }
    if ([((ImActorModelApiPeer *) nil_chk([updateMessage getPeer])) getType] == ImActorModelApiPeerTypeEnum_get_PRIVATE()) {
      [users addWithId:JavaLangInteger_valueOfWithInt_([((ImActorModelApiPeer *) nil_chk([updateMessage getPeer])) getId])];
    }
  }
  else if ([update isKindOfClass:[ImActorModelApiUpdatesUpdateContactRegistered class]]) {
    ImActorModelApiUpdatesUpdateContactRegistered *contactRegistered = (ImActorModelApiUpdatesUpdateContactRegistered *) check_class_cast(update, [ImActorModelApiUpdatesUpdateContactRegistered class]);
    [users addWithId:JavaLangInteger_valueOfWithInt_([((ImActorModelApiUpdatesUpdateContactRegistered *) nil_chk(contactRegistered)) getUid])];
  }
  else if ([update isKindOfClass:[ImActorModelApiUpdatesUpdateGroupInvite class]]) {
    ImActorModelApiUpdatesUpdateGroupInvite *groupInvite = (ImActorModelApiUpdatesUpdateGroupInvite *) check_class_cast(update, [ImActorModelApiUpdatesUpdateGroupInvite class]);
    [users addWithId:JavaLangInteger_valueOfWithInt_([((ImActorModelApiUpdatesUpdateGroupInvite *) nil_chk(groupInvite)) getInviteUid])];
    [groups addWithId:JavaLangInteger_valueOfWithInt_([groupInvite getGroupId])];
  }
  else if ([update isKindOfClass:[ImActorModelApiUpdatesUpdateGroupUserAdded class]]) {
    ImActorModelApiUpdatesUpdateGroupUserAdded *added = (ImActorModelApiUpdatesUpdateGroupUserAdded *) check_class_cast(update, [ImActorModelApiUpdatesUpdateGroupUserAdded class]);
    [users addWithId:JavaLangInteger_valueOfWithInt_([((ImActorModelApiUpdatesUpdateGroupUserAdded *) nil_chk(added)) getInviterUid])];
    [users addWithId:JavaLangInteger_valueOfWithInt_([added getUid])];
    [groups addWithId:JavaLangInteger_valueOfWithInt_([added getGroupId])];
  }
  else if ([update isKindOfClass:[ImActorModelApiUpdatesUpdateGroupUserKick class]]) {
    ImActorModelApiUpdatesUpdateGroupUserKick *kick = (ImActorModelApiUpdatesUpdateGroupUserKick *) check_class_cast(update, [ImActorModelApiUpdatesUpdateGroupUserKick class]);
    [users addWithId:JavaLangInteger_valueOfWithInt_([((ImActorModelApiUpdatesUpdateGroupUserKick *) nil_chk(kick)) getKickerUid])];
    [users addWithId:JavaLangInteger_valueOfWithInt_([kick getUid])];
    [groups addWithId:JavaLangInteger_valueOfWithInt_([kick getGroupId])];
  }
  else if ([update isKindOfClass:[ImActorModelApiUpdatesUpdateGroupUserLeave class]]) {
    ImActorModelApiUpdatesUpdateGroupUserLeave *leave = (ImActorModelApiUpdatesUpdateGroupUserLeave *) check_class_cast(update, [ImActorModelApiUpdatesUpdateGroupUserLeave class]);
    [users addWithId:JavaLangInteger_valueOfWithInt_([((ImActorModelApiUpdatesUpdateGroupUserLeave *) nil_chk(leave)) getUid])];
    [groups addWithId:JavaLangInteger_valueOfWithInt_([leave getGroupId])];
  }
  else if ([update isKindOfClass:[ImActorModelApiUpdatesUpdateContactsAdded class]]) {
    [users addAllWithJavaUtilCollection:[((ImActorModelApiUpdatesUpdateContactsAdded *) nil_chk(((ImActorModelApiUpdatesUpdateContactsAdded *) check_class_cast(update, [ImActorModelApiUpdatesUpdateContactsAdded class])))) getUids]];
  }
  else if ([update isKindOfClass:[ImActorModelApiUpdatesUpdateContactsRemoved class]]) {
    [users addAllWithJavaUtilCollection:[((ImActorModelApiUpdatesUpdateContactsRemoved *) nil_chk(((ImActorModelApiUpdatesUpdateContactsRemoved *) check_class_cast(update, [ImActorModelApiUpdatesUpdateContactsRemoved class])))) getUids]];
  }
  else if ([update isKindOfClass:[ImActorModelApiUpdatesUpdateUserContactAdded class]]) {
    ImActorModelApiUpdatesUpdateUserContactAdded *contactAdded = (ImActorModelApiUpdatesUpdateUserContactAdded *) check_class_cast(update, [ImActorModelApiUpdatesUpdateUserContactAdded class]);
    [users addWithId:JavaLangInteger_valueOfWithInt_([((ImActorModelApiUpdatesUpdateUserContactAdded *) nil_chk(contactAdded)) getUid])];
    [contacts addWithId:JavaLangInteger_valueOfWithInt_([contactAdded getContactId])];
  }
  else if ([update isKindOfClass:[ImActorModelApiUpdatesUpdateUserContactRemoved class]]) {
    ImActorModelApiUpdatesUpdateUserContactRemoved *contactAdded = (ImActorModelApiUpdatesUpdateUserContactRemoved *) check_class_cast(update, [ImActorModelApiUpdatesUpdateUserContactRemoved class]);
    [users addWithId:JavaLangInteger_valueOfWithInt_([((ImActorModelApiUpdatesUpdateUserContactRemoved *) nil_chk(contactAdded)) getUid])];
    [contacts addWithId:JavaLangInteger_valueOfWithInt_([contactAdded getContactId])];
  }
  else if ([update isKindOfClass:[ImActorModelApiUpdatesUpdateUserLocalNameChanged class]]) {
    ImActorModelApiUpdatesUpdateUserLocalNameChanged *localNameChanged = (ImActorModelApiUpdatesUpdateUserLocalNameChanged *) check_class_cast(update, [ImActorModelApiUpdatesUpdateUserLocalNameChanged class]);
    [users addWithId:JavaLangInteger_valueOfWithInt_([((ImActorModelApiUpdatesUpdateUserLocalNameChanged *) nil_chk(localNameChanged)) getUid])];
  }
  if (![((ImActorModelModulesUpdatesUsersProcessor *) nil_chk(usersProcessor_)) hasUsersWithJavaUtilCollection:users]) {
    return YES;
  }
  return NO;
}

- (void)dealloc {
  RELEASE_(messenger_);
  RELEASE_(usersProcessor_);
  RELEASE_(messagesProcessor_);
  RELEASE_(groupsProcessor_);
  [super dealloc];
}

- (void)copyAllFieldsTo:(ImActorModelModulesUpdatesUpdateProcessor *)other {
  [super copyAllFieldsTo:other];
  ImActorModelModulesUpdatesUpdateProcessor_set_messenger_(other, messenger_);
  ImActorModelModulesUpdatesUpdateProcessor_set_usersProcessor_(other, usersProcessor_);
  ImActorModelModulesUpdatesUpdateProcessor_set_messagesProcessor_(other, messagesProcessor_);
  ImActorModelModulesUpdatesUpdateProcessor_set_groupsProcessor_(other, groupsProcessor_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithAMMessenger:", "UpdateProcessor", NULL, 0x1, NULL },
    { "applyRelatedWithJavaUtilList:withJavaUtilList:withJavaUtilList:withBoolean:", "applyRelated", "V", 0x1, NULL },
    { "processInternalUpdateWithImActorModelModulesUpdatesInternalInternalUpdate:", "processInternalUpdate", "V", 0x1, NULL },
    { "processUpdateWithImActorModelNetworkParserUpdate:", "processUpdate", "V", 0x1, NULL },
    { "isCausesInvalidationWithImActorModelNetworkParserUpdate:", "isCausesInvalidation", "Z", 0x1, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "messenger_", NULL, 0x2, "Lim.actor.model.Messenger;", NULL,  },
    { "usersProcessor_", NULL, 0x2, "Lim.actor.model.modules.updates.UsersProcessor;", NULL,  },
    { "messagesProcessor_", NULL, 0x2, "Lim.actor.model.modules.updates.MessagesProcessor;", NULL,  },
    { "groupsProcessor_", NULL, 0x2, "Lim.actor.model.modules.updates.GroupsProcessor;", NULL,  },
  };
  static const J2ObjcClassInfo _ImActorModelModulesUpdatesUpdateProcessor = { 1, "UpdateProcessor", "im.actor.model.modules.updates", NULL, 0x1, 5, methods, 4, fields, 0, NULL};
  return &_ImActorModelModulesUpdatesUpdateProcessor;
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorModelModulesUpdatesUpdateProcessor)
