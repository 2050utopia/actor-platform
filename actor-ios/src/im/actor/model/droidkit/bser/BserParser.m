//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-model/actor-ios/build/java/im/actor/model/droidkit/bser/BserParser.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "im/actor/model/droidkit/bser/BserParser.h"
#include "im/actor/model/droidkit/bser/WireTypes.h"
#include "im/actor/model/droidkit/bser/util/SparseArray.h"
#include "im/actor/model/util/DataInput.h"
#include "java/io/IOException.h"
#include "java/lang/Long.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"

__attribute__((unused)) static void ImActorModelDroidkitBserBserParser_putWithInt_withId_withImActorModelDroidkitBserUtilSparseArray_(jint id_, id res, ImActorModelDroidkitBserUtilSparseArray *hashMap);

@interface ImActorModelDroidkitBserBserParser ()

+ (void)putWithInt:(jint)id_
            withId:(id)res
withImActorModelDroidkitBserUtilSparseArray:(ImActorModelDroidkitBserUtilSparseArray *)hashMap;
@end

@implementation ImActorModelDroidkitBserBserParser

+ (ImActorModelDroidkitBserUtilSparseArray *)deserializeWithAMDataInput:(AMDataInput *)is {
  return ImActorModelDroidkitBserBserParser_deserializeWithAMDataInput_(is);
}

+ (void)putWithInt:(jint)id_
            withId:(id)res
withImActorModelDroidkitBserUtilSparseArray:(ImActorModelDroidkitBserUtilSparseArray *)hashMap {
  ImActorModelDroidkitBserBserParser_putWithInt_withId_withImActorModelDroidkitBserUtilSparseArray_(id_, res, hashMap);
}

- (instancetype)init {
  return [super init];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "deserializeWithAMDataInput:", "deserialize", "Lim.actor.model.droidkit.bser.util.SparseArray;", 0x9, "Ljava.io.IOException;" },
    { "putWithInt:withId:withImActorModelDroidkitBserUtilSparseArray:", "put", "V", 0xa, NULL },
    { "init", NULL, NULL, 0x1, NULL },
  };
  static const J2ObjcClassInfo _ImActorModelDroidkitBserBserParser = { 1, "BserParser", "im.actor.model.droidkit.bser", NULL, 0x1, 3, methods, 0, NULL, 0, NULL};
  return &_ImActorModelDroidkitBserBserParser;
}

@end

ImActorModelDroidkitBserUtilSparseArray *ImActorModelDroidkitBserBserParser_deserializeWithAMDataInput_(AMDataInput *is) {
  ImActorModelDroidkitBserBserParser_init();
  ImActorModelDroidkitBserUtilSparseArray *hashMap = [[[ImActorModelDroidkitBserUtilSparseArray alloc] init] autorelease];
  jint currentTag;
  while ((currentTag = [((AMDataInput *) nil_chk(is)) readByteSilent]) > 0) {
    jint id_ = RShift32(currentTag, 3);
    jint type = currentTag & (jint) 0x7;
    if (type == ImActorModelDroidkitBserWireTypes_TYPE_VARINT) {
      ImActorModelDroidkitBserBserParser_putWithInt_withId_withImActorModelDroidkitBserUtilSparseArray_(id_, JavaLangLong_valueOfWithLong_([is readVarInt]), hashMap);
    }
    else if (type == ImActorModelDroidkitBserWireTypes_TYPE_LENGTH_DELIMITED) {
      jint size = (jint) [is readVarInt];
      ImActorModelDroidkitBserBserParser_putWithInt_withId_withImActorModelDroidkitBserUtilSparseArray_(id_, [is readBytesWithInt:size], hashMap);
    }
    else if (type == ImActorModelDroidkitBserWireTypes_TYPE_64BIT) {
      ImActorModelDroidkitBserBserParser_putWithInt_withId_withImActorModelDroidkitBserUtilSparseArray_(id_, JavaLangLong_valueOfWithLong_([is readLong]), hashMap);
    }
    else if (type == ImActorModelDroidkitBserWireTypes_TYPE_32BIT) {
      ImActorModelDroidkitBserBserParser_putWithInt_withId_withImActorModelDroidkitBserUtilSparseArray_(id_, JavaLangLong_valueOfWithLong_([is readUInt]), hashMap);
    }
    else {
      @throw [[[JavaIoIOException alloc] initWithNSString:JreStrcat("$I", @"Unknown Wire Type #", type)] autorelease];
    }
  }
  return hashMap;
}

void ImActorModelDroidkitBserBserParser_putWithInt_withId_withImActorModelDroidkitBserUtilSparseArray_(jint id_, id res, ImActorModelDroidkitBserUtilSparseArray *hashMap) {
  ImActorModelDroidkitBserBserParser_init();
  if ([((ImActorModelDroidkitBserUtilSparseArray *) nil_chk(hashMap)) getWithInt:id_] != nil) {
    if ([JavaUtilList_class_() isInstance:[hashMap getWithInt:id_]]) {
      [((id<JavaUtilList>) nil_chk(((id<JavaUtilList>) check_protocol_cast([hashMap getWithInt:id_], @protocol(JavaUtilList))))) addWithId:res];
    }
    else {
      JavaUtilArrayList *list = [[[JavaUtilArrayList alloc] init] autorelease];
      [list addWithId:[hashMap getWithInt:id_]];
      [list addWithId:res];
      [hashMap putWithInt:id_ withId:list];
    }
  }
  else {
    [hashMap putWithInt:id_ withId:res];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorModelDroidkitBserBserParser)
