//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-model/actor-ios/build/java/im/actor/model/droidkit/actors/mailbox/ActorDispatcher.java
//

#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "im/actor/model/droidkit/actors/Actor.h"
#include "im/actor/model/droidkit/actors/ActorContext.h"
#include "im/actor/model/droidkit/actors/ActorRef.h"
#include "im/actor/model/droidkit/actors/ActorScope.h"
#include "im/actor/model/droidkit/actors/ActorSystem.h"
#include "im/actor/model/droidkit/actors/ActorTime.h"
#include "im/actor/model/droidkit/actors/Props.h"
#include "im/actor/model/droidkit/actors/debug/TraceInterface.h"
#include "im/actor/model/droidkit/actors/dispatch/AbstractDispatcher.h"
#include "im/actor/model/droidkit/actors/extensions/ActorExtension.h"
#include "im/actor/model/droidkit/actors/mailbox/ActorDispatcher.h"
#include "im/actor/model/droidkit/actors/mailbox/ActorEndpoint.h"
#include "im/actor/model/droidkit/actors/mailbox/Envelope.h"
#include "im/actor/model/droidkit/actors/mailbox/Mailbox.h"
#include "im/actor/model/droidkit/actors/mailbox/MailboxesQueue.h"
#include "im/actor/model/droidkit/actors/messages/DeadLetter.h"
#include "im/actor/model/droidkit/actors/messages/Ping.h"
#include "im/actor/model/droidkit/actors/messages/PoisonPill.h"
#include "im/actor/model/droidkit/actors/messages/StartActor.h"
#include "java/lang/Exception.h"
#include "java/lang/RuntimeException.h"
#include "java/util/ArrayList.h"
#include "java/util/HashMap.h"

@interface ImActorModelDroidkitActorsMailboxActorDispatcher () {
 @public
  id LOCK_;
  JavaUtilHashMap *endpoints_;
  JavaUtilHashMap *scopes_;
  ImActorModelDroidkitActorsActorSystem *actorSystem_;
  NSString *name_;
  ImActorModelDroidkitActorsDispatchAbstractDispatcher *dispatcher_;
}
@end

J2OBJC_FIELD_SETTER(ImActorModelDroidkitActorsMailboxActorDispatcher, LOCK_, id)
J2OBJC_FIELD_SETTER(ImActorModelDroidkitActorsMailboxActorDispatcher, endpoints_, JavaUtilHashMap *)
J2OBJC_FIELD_SETTER(ImActorModelDroidkitActorsMailboxActorDispatcher, scopes_, JavaUtilHashMap *)
J2OBJC_FIELD_SETTER(ImActorModelDroidkitActorsMailboxActorDispatcher, actorSystem_, ImActorModelDroidkitActorsActorSystem *)
J2OBJC_FIELD_SETTER(ImActorModelDroidkitActorsMailboxActorDispatcher, name_, NSString *)
J2OBJC_FIELD_SETTER(ImActorModelDroidkitActorsMailboxActorDispatcher, dispatcher_, ImActorModelDroidkitActorsDispatchAbstractDispatcher *)

@implementation ImActorModelDroidkitActorsMailboxActorDispatcher

- (instancetype)initWithNSString:(NSString *)name
withImActorModelDroidkitActorsActorSystem:(ImActorModelDroidkitActorsActorSystem *)actorSystem {
  if (self = [super init]) {
    ImActorModelDroidkitActorsMailboxActorDispatcher_setAndConsume_LOCK_(self, [[NSObject alloc] init]);
    ImActorModelDroidkitActorsMailboxActorDispatcher_setAndConsume_endpoints_(self, [[JavaUtilHashMap alloc] init]);
    ImActorModelDroidkitActorsMailboxActorDispatcher_setAndConsume_scopes_(self, [[JavaUtilHashMap alloc] init]);
    ImActorModelDroidkitActorsMailboxActorDispatcher_set_name_(self, name);
    ImActorModelDroidkitActorsMailboxActorDispatcher_set_actorSystem_(self, actorSystem);
  }
  return self;
}

- (void)initDispatcherWithImActorModelDroidkitActorsDispatchAbstractDispatcher:(ImActorModelDroidkitActorsDispatchAbstractDispatcher *)dispatcher {
  if (self->dispatcher_ != nil) {
    @throw [[[JavaLangRuntimeException alloc] initWithNSString:@"Double dispatcher init"] autorelease];
  }
  ImActorModelDroidkitActorsMailboxActorDispatcher_set_dispatcher_(self, dispatcher);
}

- (ImActorModelDroidkitActorsActorRef *)referenceActorWithNSString:(NSString *)path
                               withImActorModelDroidkitActorsProps:(ImActorModelDroidkitActorsProps *)props {
  @synchronized(LOCK_) {
    if ([((JavaUtilHashMap *) nil_chk(scopes_)) containsKeyWithId:path]) {
      return [((ImActorModelDroidkitActorsActorScope *) nil_chk([scopes_ getWithId:path])) getActorRef];
    }
    ImActorModelDroidkitActorsMailboxMailbox *mailbox = [((ImActorModelDroidkitActorsProps *) nil_chk(props)) createMailboxWithImActorModelDroidkitActorsMailboxMailboxesQueue:[((ImActorModelDroidkitActorsDispatchAbstractDispatcher *) nil_chk(dispatcher_)) getQueue]];
    ImActorModelDroidkitActorsMailboxActorEndpoint *endpoint = [((JavaUtilHashMap *) nil_chk(endpoints_)) getWithId:path];
    if (endpoint == nil) {
      endpoint = [[[ImActorModelDroidkitActorsMailboxActorEndpoint alloc] initWithNSString:path] autorelease];
      [endpoints_ putWithId:path withId:endpoint];
    }
    ImActorModelDroidkitActorsActorScope *scope = [[[ImActorModelDroidkitActorsActorScope alloc] initWithImActorModelDroidkitActorsActorSystem:actorSystem_ withImActorModelDroidkitActorsMailboxMailbox:mailbox withImActorModelDroidkitActorsMailboxActorDispatcher:self withNSString:path withImActorModelDroidkitActorsProps:props withImActorModelDroidkitActorsMailboxActorEndpoint:endpoint] autorelease];
    [((ImActorModelDroidkitActorsMailboxActorEndpoint *) nil_chk(endpoint)) connectWithImActorModelDroidkitActorsMailboxMailbox:mailbox withImActorModelDroidkitActorsActorScope:scope];
    [scopes_ putWithId:[scope getPath] withId:scope];
    [((ImActorModelDroidkitActorsActorRef *) nil_chk([scope getActorRef])) sendWithId:ImActorModelDroidkitActorsMessagesStartActor_get_INSTANCE_()];
    return [scope getActorRef];
  }
}

- (void)killGracefullyWithImActorModelDroidkitActorsActorScope:(ImActorModelDroidkitActorsActorScope *)scope {
  for (id<ImActorModelDroidkitActorsExtensionsActorExtension> __strong e in nil_chk([((ImActorModelDroidkitActorsActor *) nil_chk([((ImActorModelDroidkitActorsActorScope *) nil_chk(scope)) getActor])) getExtensions])) {
    [((id<ImActorModelDroidkitActorsExtensionsActorExtension>) nil_chk(e)) postStop];
  }
  [((ImActorModelDroidkitActorsActor *) nil_chk([scope getActor])) postStop];
  [scope onActorDie];
  {
    IOSObjectArray *a__ = [((ImActorModelDroidkitActorsMailboxMailbox *) nil_chk([scope getMailbox])) allEnvelopes];
    ImActorModelDroidkitActorsMailboxEnvelope * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    ImActorModelDroidkitActorsMailboxEnvelope * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      ImActorModelDroidkitActorsMailboxEnvelope *e = *b__++;
      if ([((ImActorModelDroidkitActorsMailboxEnvelope *) nil_chk(e)) getSender] != nil) {
        [((ImActorModelDroidkitActorsActorRef *) nil_chk([e getSender])) sendWithId:[[[ImActorModelDroidkitActorsMessagesDeadLetter alloc] initWithId:[e getMessage]] autorelease]];
      }
    }
  }
  [((ImActorModelDroidkitActorsMailboxMailbox *) nil_chk([scope getMailbox])) clear];
  @synchronized(LOCK_) {
    [((JavaUtilHashMap *) nil_chk(scopes_)) removeWithId:[scope getPath]];
    [((JavaUtilHashMap *) nil_chk(endpoints_)) removeWithId:[scope getPath]];
    [((ImActorModelDroidkitActorsMailboxMailboxesQueue *) nil_chk([((ImActorModelDroidkitActorsDispatchAbstractDispatcher *) nil_chk(dispatcher_)) getQueue])) disconnectMailboxWithImActorModelDroidkitActorsMailboxMailbox:[scope getMailbox]];
  }
}

- (void)sendMessageWithImActorModelDroidkitActorsMailboxActorEndpoint:(ImActorModelDroidkitActorsMailboxActorEndpoint *)endpoint
                                                               withId:(id)message
                                                             withLong:(jlong)time
                               withImActorModelDroidkitActorsActorRef:(ImActorModelDroidkitActorsActorRef *)sender {
  if ([((ImActorModelDroidkitActorsMailboxActorEndpoint *) nil_chk(endpoint)) isDisconnected]) {
    if (sender != nil) {
      if ([((ImActorModelDroidkitActorsActorSystem *) nil_chk(actorSystem_)) getTraceInterface] != nil) {
        [((id<ImActorModelDroidkitActorsDebugTraceInterface>) nil_chk([actorSystem_ getTraceInterface])) onDeadLetterWithImActorModelDroidkitActorsActorRef:sender withId:message];
      }
      [sender sendWithId:[[[ImActorModelDroidkitActorsMessagesDeadLetter alloc] initWithId:message] autorelease]];
    }
  }
  else {
    [((ImActorModelDroidkitActorsMailboxMailbox *) nil_chk([endpoint getMailbox])) scheduleWithImActorModelDroidkitActorsMailboxEnvelope:[[[ImActorModelDroidkitActorsMailboxEnvelope alloc] initWithId:message withImActorModelDroidkitActorsActorScope:[endpoint getScope] withImActorModelDroidkitActorsMailboxMailbox:[endpoint getMailbox] withImActorModelDroidkitActorsActorRef:sender] autorelease] withLong:time];
  }
}

- (void)sendMessageOnceWithImActorModelDroidkitActorsMailboxActorEndpoint:(ImActorModelDroidkitActorsMailboxActorEndpoint *)endpoint
                                                                   withId:(id)message
                                                                 withLong:(jlong)time
                                   withImActorModelDroidkitActorsActorRef:(ImActorModelDroidkitActorsActorRef *)sender {
  if ([((ImActorModelDroidkitActorsMailboxActorEndpoint *) nil_chk(endpoint)) isDisconnected]) {
    if (sender != nil) {
      if ([((ImActorModelDroidkitActorsActorSystem *) nil_chk(actorSystem_)) getTraceInterface] != nil) {
        [((id<ImActorModelDroidkitActorsDebugTraceInterface>) nil_chk([actorSystem_ getTraceInterface])) onDeadLetterWithImActorModelDroidkitActorsActorRef:sender withId:message];
      }
      [sender sendWithId:[[[ImActorModelDroidkitActorsMessagesDeadLetter alloc] initWithId:message] autorelease]];
    }
  }
  else {
    [((ImActorModelDroidkitActorsMailboxMailbox *) nil_chk([endpoint getMailbox])) scheduleOnceWithImActorModelDroidkitActorsMailboxEnvelope:[[[ImActorModelDroidkitActorsMailboxEnvelope alloc] initWithId:message withImActorModelDroidkitActorsActorScope:[endpoint getScope] withImActorModelDroidkitActorsMailboxMailbox:[endpoint getMailbox] withImActorModelDroidkitActorsActorRef:sender] autorelease] withLong:time];
  }
}

- (void)cancelSendWithImActorModelDroidkitActorsMailboxActorEndpoint:(ImActorModelDroidkitActorsMailboxActorEndpoint *)endpoint
                                                              withId:(id)message
                              withImActorModelDroidkitActorsActorRef:(ImActorModelDroidkitActorsActorRef *)sender {
  if (![((ImActorModelDroidkitActorsMailboxActorEndpoint *) nil_chk(endpoint)) isDisconnected]) {
    [((ImActorModelDroidkitActorsMailboxMailbox *) nil_chk([endpoint getMailbox])) unscheduleWithImActorModelDroidkitActorsMailboxEnvelope:[[[ImActorModelDroidkitActorsMailboxEnvelope alloc] initWithId:message withImActorModelDroidkitActorsActorScope:[endpoint getScope] withImActorModelDroidkitActorsMailboxMailbox:[endpoint getMailbox] withImActorModelDroidkitActorsActorRef:sender] autorelease]];
  }
}

- (NSString *)getName {
  return name_;
}

- (void)processEnvelopeWithImActorModelDroidkitActorsMailboxEnvelope:(ImActorModelDroidkitActorsMailboxEnvelope *)envelope {
  ImActorModelDroidkitActorsActorScope *scope = [((ImActorModelDroidkitActorsMailboxEnvelope *) nil_chk(envelope)) getScope];
  if ([((ImActorModelDroidkitActorsActorSystem *) nil_chk(actorSystem_)) getTraceInterface] != nil) {
    [((id<ImActorModelDroidkitActorsDebugTraceInterface>) nil_chk([actorSystem_ getTraceInterface])) onEnvelopeDeliveredWithImActorModelDroidkitActorsMailboxEnvelope:envelope];
  }
  jlong start = ImActorModelDroidkitActorsActorTime_currentTime();
  jboolean isDisconnected = NO;
  if ([((ImActorModelDroidkitActorsActorScope *) nil_chk(scope)) getActor] == nil) {
    if ([envelope getMessage] == ImActorModelDroidkitActorsMessagesPoisonPill_get_INSTANCE_()) {
      return;
    }
    @try {
      ImActorModelDroidkitActorsActor *actor = [((ImActorModelDroidkitActorsProps *) nil_chk([scope getProps])) create];
      [((ImActorModelDroidkitActorsActor *) nil_chk(actor)) initActorWithNSString:[scope getPath] withImActorModelDroidkitActorsActorContext:[[[ImActorModelDroidkitActorsActorContext alloc] initWithImActorModelDroidkitActorsActorScope:scope] autorelease] withImActorModelDroidkitActorsMailboxMailbox:[scope getMailbox]];
      for (id<ImActorModelDroidkitActorsExtensionsActorExtension> __strong e in nil_chk([actor getExtensions])) {
        [((id<ImActorModelDroidkitActorsExtensionsActorExtension>) nil_chk(e)) preStart];
      }
      [actor preStart];
      [scope onActorCreatedWithImActorModelDroidkitActorsActor:actor];
    }
    @catch (JavaLangException *e) {
      [((JavaLangException *) nil_chk(e)) printStackTrace];
      if ([envelope getSender] != nil) {
        [((ImActorModelDroidkitActorsActorRef *) nil_chk([envelope getSender])) sendWithId:[[[ImActorModelDroidkitActorsMessagesDeadLetter alloc] initWithId:@"Unable to create actor"] autorelease]];
      }
      return;
    }
  }
  @try {
    if ([envelope getMessage] == ImActorModelDroidkitActorsMessagesStartActor_get_INSTANCE_()) {
      return;
    }
    else if ([envelope getMessage] == ImActorModelDroidkitActorsMessagesPing_get_INSTANCE_()) {
      return;
    }
    else if ([envelope getMessage] == ImActorModelDroidkitActorsMessagesPoisonPill_get_INSTANCE_()) {
      isDisconnected = YES;
      for (id<ImActorModelDroidkitActorsExtensionsActorExtension> __strong e in nil_chk([((ImActorModelDroidkitActorsActor *) nil_chk([scope getActor])) getExtensions])) {
        [((id<ImActorModelDroidkitActorsExtensionsActorExtension>) nil_chk(e)) postStop];
      }
      [((ImActorModelDroidkitActorsActor *) nil_chk([scope getActor])) postStop];
      [scope onActorDie];
      {
        IOSObjectArray *a__ = [((ImActorModelDroidkitActorsMailboxMailbox *) nil_chk([scope getMailbox])) allEnvelopes];
        ImActorModelDroidkitActorsMailboxEnvelope * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
        ImActorModelDroidkitActorsMailboxEnvelope * const *e__ = b__ + a__->size_;
        while (b__ < e__) {
          ImActorModelDroidkitActorsMailboxEnvelope *e = *b__++;
          if ([((ImActorModelDroidkitActorsMailboxEnvelope *) nil_chk(e)) getSender] != nil) {
            [((ImActorModelDroidkitActorsActorRef *) nil_chk([e getSender])) sendWithId:[[[ImActorModelDroidkitActorsMessagesDeadLetter alloc] initWithId:[e getMessage]] autorelease]];
          }
        }
      }
      [((ImActorModelDroidkitActorsMailboxMailbox *) nil_chk([scope getMailbox])) clear];
      @synchronized(LOCK_) {
        [((JavaUtilHashMap *) nil_chk(scopes_)) removeWithId:[scope getPath]];
        [((JavaUtilHashMap *) nil_chk(endpoints_)) removeWithId:[scope getPath]];
        [((ImActorModelDroidkitActorsMailboxMailboxesQueue *) nil_chk([((ImActorModelDroidkitActorsDispatchAbstractDispatcher *) nil_chk(dispatcher_)) getQueue])) disconnectMailboxWithImActorModelDroidkitActorsMailboxMailbox:[scope getMailbox]];
      }
    }
    else {
      [scope setSenderWithImActorModelDroidkitActorsActorRef:[envelope getSender]];
      for (id<ImActorModelDroidkitActorsExtensionsActorExtension> __strong e in nil_chk([((ImActorModelDroidkitActorsActor *) nil_chk([scope getActor])) getExtensions])) {
        if ([((id<ImActorModelDroidkitActorsExtensionsActorExtension>) nil_chk(e)) onReceiveWithId:[envelope getMessage]]) {
          return;
        }
      }
      [((ImActorModelDroidkitActorsActor *) nil_chk([scope getActor])) onReceiveWithId:[envelope getMessage]];
    }
  }
  @catch (JavaLangException *e) {
    if ([actorSystem_ getTraceInterface] != nil) {
      [((id<ImActorModelDroidkitActorsDebugTraceInterface>) nil_chk([actorSystem_ getTraceInterface])) onActorDieWithImActorModelDroidkitActorsActorRef:[scope getActorRef] withJavaLangException:e];
    }
    [scope onActorDie];
    isDisconnected = YES;
    @synchronized(LOCK_) {
      [((JavaUtilHashMap *) nil_chk(scopes_)) removeWithId:[scope getPath]];
      [((JavaUtilHashMap *) nil_chk(endpoints_)) removeWithId:[scope getPath]];
      [((ImActorModelDroidkitActorsMailboxMailboxesQueue *) nil_chk([((ImActorModelDroidkitActorsDispatchAbstractDispatcher *) nil_chk(dispatcher_)) getQueue])) disconnectMailboxWithImActorModelDroidkitActorsMailboxMailbox:[scope getMailbox]];
    }
  }
  @finally {
    if ([actorSystem_ getTraceInterface] != nil) {
      [((id<ImActorModelDroidkitActorsDebugTraceInterface>) nil_chk([actorSystem_ getTraceInterface])) onEnvelopeProcessedWithImActorModelDroidkitActorsMailboxEnvelope:envelope withLong:ImActorModelDroidkitActorsActorTime_currentTime() - start];
    }
    if (!isDisconnected) {
      [((ImActorModelDroidkitActorsMailboxMailboxesQueue *) nil_chk([((ImActorModelDroidkitActorsDispatchAbstractDispatcher *) nil_chk(dispatcher_)) getQueue])) unlockMailboxWithImActorModelDroidkitActorsMailboxMailbox:[envelope getMailbox]];
    }
  }
}

- (void)dealloc {
  RELEASE_(LOCK_);
  RELEASE_(endpoints_);
  RELEASE_(scopes_);
  RELEASE_(actorSystem_);
  RELEASE_(name_);
  RELEASE_(dispatcher_);
  [super dealloc];
}

- (void)copyAllFieldsTo:(ImActorModelDroidkitActorsMailboxActorDispatcher *)other {
  [super copyAllFieldsTo:other];
  ImActorModelDroidkitActorsMailboxActorDispatcher_set_LOCK_(other, LOCK_);
  ImActorModelDroidkitActorsMailboxActorDispatcher_set_endpoints_(other, endpoints_);
  ImActorModelDroidkitActorsMailboxActorDispatcher_set_scopes_(other, scopes_);
  ImActorModelDroidkitActorsMailboxActorDispatcher_set_actorSystem_(other, actorSystem_);
  ImActorModelDroidkitActorsMailboxActorDispatcher_set_name_(other, name_);
  ImActorModelDroidkitActorsMailboxActorDispatcher_set_dispatcher_(other, dispatcher_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:withImActorModelDroidkitActorsActorSystem:", "ActorDispatcher", NULL, 0x1, NULL },
    { "initDispatcherWithImActorModelDroidkitActorsDispatchAbstractDispatcher:", "initDispatcher", "V", 0x4, NULL },
    { "referenceActorWithNSString:withImActorModelDroidkitActorsProps:", "referenceActor", "Lim.actor.model.droidkit.actors.ActorRef;", 0x11, NULL },
    { "killGracefullyWithImActorModelDroidkitActorsActorScope:", "killGracefully", "V", 0x11, NULL },
    { "sendMessageWithImActorModelDroidkitActorsMailboxActorEndpoint:withId:withLong:withImActorModelDroidkitActorsActorRef:", "sendMessage", "V", 0x11, NULL },
    { "sendMessageOnceWithImActorModelDroidkitActorsMailboxActorEndpoint:withId:withLong:withImActorModelDroidkitActorsActorRef:", "sendMessageOnce", "V", 0x11, NULL },
    { "cancelSendWithImActorModelDroidkitActorsMailboxActorEndpoint:withId:withImActorModelDroidkitActorsActorRef:", "cancelSend", "V", 0x11, NULL },
    { "getName", NULL, "Ljava.lang.String;", 0x1, NULL },
    { "processEnvelopeWithImActorModelDroidkitActorsMailboxEnvelope:", "processEnvelope", "V", 0x4, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "LOCK_", NULL, 0x12, "Ljava.lang.Object;", NULL,  },
    { "endpoints_", NULL, 0x12, "Ljava.util.HashMap;", NULL,  },
    { "scopes_", NULL, 0x12, "Ljava.util.HashMap;", NULL,  },
    { "actorSystem_", NULL, 0x12, "Lim.actor.model.droidkit.actors.ActorSystem;", NULL,  },
    { "name_", NULL, 0x2, "Ljava.lang.String;", NULL,  },
    { "dispatcher_", NULL, 0x2, "Lim.actor.model.droidkit.actors.dispatch.AbstractDispatcher;", NULL,  },
  };
  static const J2ObjcClassInfo _ImActorModelDroidkitActorsMailboxActorDispatcher = { 1, "ActorDispatcher", "im.actor.model.droidkit.actors.mailbox", NULL, 0x401, 9, methods, 6, fields, 0, NULL};
  return &_ImActorModelDroidkitActorsMailboxActorDispatcher;
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ImActorModelDroidkitActorsMailboxActorDispatcher)
