//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/ex3ndr/Develop/actor-model/actor-ios/build/java/com/droidkit/actors/concurrency/Future.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "com/droidkit/actors/concurrency/Future.h"
#include "com/droidkit/actors/concurrency/FutureCallback.h"
#include "com/droidkit/actors/concurrency/FutureTimeoutException.h"
#include "java/lang/Throwable.h"
#include "java/util/LinkedList.h"

@interface ComDroidkitActorsConcurrencyFuture () {
 @public
  JavaUtilLinkedList *callbacks_;
  jboolean isCompleted__;
  jboolean isCanceled__;
  jboolean isError__;
  id result_;
  JavaLangThrowable *error__;
}
@end

J2OBJC_FIELD_SETTER(ComDroidkitActorsConcurrencyFuture, callbacks_, JavaUtilLinkedList *)
J2OBJC_FIELD_SETTER(ComDroidkitActorsConcurrencyFuture, result_, id)
J2OBJC_FIELD_SETTER(ComDroidkitActorsConcurrencyFuture, error__, JavaLangThrowable *)

@implementation ComDroidkitActorsConcurrencyFuture

- (jboolean)isCompleted {
  @synchronized(self) {
    return isCompleted__;
  }
}

- (jboolean)isError {
  @synchronized(self) {
    return isError__;
  }
}

- (jboolean)isCanceled {
  @synchronized(self) {
    return isCanceled__;
  }
}

- (JavaLangThrowable *)error {
  @synchronized(self) {
    return error__;
  }
}

- (id)get {
  @synchronized(self) {
    return result_;
  }
}

- (jboolean)addListenerWithComDroidkitActorsConcurrencyFutureCallback:(id<ComDroidkitActorsConcurrencyFutureCallback>)callback {
  @synchronized(self) {
    [((JavaUtilLinkedList *) nil_chk(callbacks_)) addWithId:callback];
    if (isCompleted__) {
      if (isCanceled__) {
        return YES;
      }
      if (isError__) {
        [((id<ComDroidkitActorsConcurrencyFutureCallback>) nil_chk(callback)) onErrorWithJavaLangThrowable:error__];
      }
      else {
        [((id<ComDroidkitActorsConcurrencyFutureCallback>) nil_chk(callback)) onResultWithId:result_];
      }
    }
    return isCompleted__;
  }
}

- (void)removeListenerWithComDroidkitActorsConcurrencyFutureCallback:(id<ComDroidkitActorsConcurrencyFutureCallback>)callback {
  @synchronized(self) {
    [((JavaUtilLinkedList *) nil_chk(callbacks_)) removeWithId:callback];
  }
}

- (void)onCancel {
  @synchronized(self) {
    if (isCompleted__) {
      return;
    }
    isCompleted__ = YES;
    isError__ = NO;
    isCanceled__ = YES;
  }
}

- (void)onCompletedWithId:(id)res {
  @synchronized(self) {
    if (isCompleted__) {
      return;
    }
    isCompleted__ = YES;
    isCanceled__ = NO;
    isError__ = NO;
    ComDroidkitActorsConcurrencyFuture_set_error__(self, nil);
    ComDroidkitActorsConcurrencyFuture_set_result_(self, res);
    for (id<ComDroidkitActorsConcurrencyFutureCallback> __strong callback in nil_chk(callbacks_)) {
      [((id<ComDroidkitActorsConcurrencyFutureCallback>) nil_chk(callback)) onResultWithId:res];
    }
  }
}

- (void)onErrorWithJavaLangThrowable:(JavaLangThrowable *)throwable {
  @synchronized(self) {
    if (isCompleted__) {
      return;
    }
    isCompleted__ = YES;
    isCanceled__ = NO;
    isError__ = YES;
    ComDroidkitActorsConcurrencyFuture_set_error__(self, throwable);
    ComDroidkitActorsConcurrencyFuture_set_result_(self, nil);
    for (id<ComDroidkitActorsConcurrencyFutureCallback> __strong callback in nil_chk(callbacks_)) {
      [((id<ComDroidkitActorsConcurrencyFutureCallback>) nil_chk(callback)) onErrorWithJavaLangThrowable:throwable];
    }
  }
}

- (void)onTimeout {
  @synchronized(self) {
    [self onErrorWithJavaLangThrowable:[[[ComDroidkitActorsConcurrencyFutureTimeoutException alloc] init] autorelease]];
  }
}

- (instancetype)init {
  if (self = [super init]) {
    ComDroidkitActorsConcurrencyFuture_setAndConsume_callbacks_(self, [[JavaUtilLinkedList alloc] init]);
    isCompleted__ = NO;
    isCanceled__ = NO;
    isError__ = NO;
    ComDroidkitActorsConcurrencyFuture_set_result_(self, nil);
    ComDroidkitActorsConcurrencyFuture_set_error__(self, nil);
  }
  return self;
}

- (void)dealloc {
  RELEASE_(callbacks_);
  RELEASE_(result_);
  RELEASE_(error__);
  [super dealloc];
}

- (void)copyAllFieldsTo:(ComDroidkitActorsConcurrencyFuture *)other {
  [super copyAllFieldsTo:other];
  ComDroidkitActorsConcurrencyFuture_set_callbacks_(other, callbacks_);
  other->isCompleted__ = isCompleted__;
  other->isCanceled__ = isCanceled__;
  other->isError__ = isError__;
  ComDroidkitActorsConcurrencyFuture_set_result_(other, result_);
  ComDroidkitActorsConcurrencyFuture_set_error__(other, error__);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "isCompleted", NULL, "Z", 0x21, NULL },
    { "isError", NULL, "Z", 0x21, NULL },
    { "isCanceled", NULL, "Z", 0x21, NULL },
    { "error", NULL, "Ljava.lang.Throwable;", 0x21, NULL },
    { "get", NULL, "TT;", 0x21, NULL },
    { "addListenerWithComDroidkitActorsConcurrencyFutureCallback:", "addListener", "Z", 0x21, NULL },
    { "removeListenerWithComDroidkitActorsConcurrencyFutureCallback:", "removeListener", "V", 0x21, NULL },
    { "onCancel", NULL, "V", 0x24, NULL },
    { "onCompletedWithId:", "onCompleted", "V", 0x24, NULL },
    { "onErrorWithJavaLangThrowable:", "onError", "V", 0x24, NULL },
    { "onTimeout", NULL, "V", 0x24, NULL },
    { "init", NULL, NULL, 0x1, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "callbacks_", NULL, 0x2, "Ljava.util.LinkedList;", NULL,  },
    { "isCompleted__", "isCompleted", 0x2, "Z", NULL,  },
    { "isCanceled__", "isCanceled", 0x2, "Z", NULL,  },
    { "isError__", "isError", 0x2, "Z", NULL,  },
    { "result_", NULL, 0x2, "TT;", NULL,  },
    { "error__", "error", 0x2, "Ljava.lang.Throwable;", NULL,  },
  };
  static const J2ObjcClassInfo _ComDroidkitActorsConcurrencyFuture = { 1, "Future", "com.droidkit.actors.concurrency", NULL, 0x401, 12, methods, 6, fields, 0, NULL};
  return &_ComDroidkitActorsConcurrencyFuture;
}

@end

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComDroidkitActorsConcurrencyFuture)
